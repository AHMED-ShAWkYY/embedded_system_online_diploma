
drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000130  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000b80  08000130  08000130  00010130  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000040  08000cb0  08000cb0  00010cb0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08000cf0  08000cf0  00020008  2**0
                  CONTENTS
  4 .ARM          00000000  08000cf0  08000cf0  00020008  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000cf0  08000cf0  00020008  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000cf0  08000cf0  00010cf0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000cf4  08000cf4  00010cf4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000008  20000000  08000cf8  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000020  20000008  08000d00  00020008  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000028  08000d00  00020028  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00020008  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000307c  00000000  00000000  00020031  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 00000789  00000000  00000000  000230ad  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    000006c4  00000000  00000000  00023836  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_aranges 00000140  00000000  00000000  00023f00  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 000000f8  00000000  00000000  00024040  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_macro  00001ed9  00000000  00000000  00024138  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_line   0000198a  00000000  00000000  00026011  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .debug_str    00007b06  00000000  00000000  0002799b  2**0
                  CONTENTS, READONLY, DEBUGGING
 20 .comment      0000007b  00000000  00000000  0002f4a1  2**0
                  CONTENTS, READONLY
 21 .debug_frame  000003a4  00000000  00000000  0002f51c  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

08000130 <__do_global_dtors_aux>:
 8000130:	b510      	push	{r4, lr}
 8000132:	4c05      	ldr	r4, [pc, #20]	; (8000148 <__do_global_dtors_aux+0x18>)
 8000134:	7823      	ldrb	r3, [r4, #0]
 8000136:	b933      	cbnz	r3, 8000146 <__do_global_dtors_aux+0x16>
 8000138:	4b04      	ldr	r3, [pc, #16]	; (800014c <__do_global_dtors_aux+0x1c>)
 800013a:	b113      	cbz	r3, 8000142 <__do_global_dtors_aux+0x12>
 800013c:	4804      	ldr	r0, [pc, #16]	; (8000150 <__do_global_dtors_aux+0x20>)
 800013e:	f3af 8000 	nop.w
 8000142:	2301      	movs	r3, #1
 8000144:	7023      	strb	r3, [r4, #0]
 8000146:	bd10      	pop	{r4, pc}
 8000148:	20000008 	.word	0x20000008
 800014c:	00000000 	.word	0x00000000
 8000150:	08000c98 	.word	0x08000c98

08000154 <frame_dummy>:
 8000154:	b508      	push	{r3, lr}
 8000156:	4b03      	ldr	r3, [pc, #12]	; (8000164 <frame_dummy+0x10>)
 8000158:	b11b      	cbz	r3, 8000162 <frame_dummy+0xe>
 800015a:	4903      	ldr	r1, [pc, #12]	; (8000168 <frame_dummy+0x14>)
 800015c:	4803      	ldr	r0, [pc, #12]	; (800016c <frame_dummy+0x18>)
 800015e:	f3af 8000 	nop.w
 8000162:	bd08      	pop	{r3, pc}
 8000164:	00000000 	.word	0x00000000
 8000168:	2000000c 	.word	0x2000000c
 800016c:	08000c98 	.word	0x08000c98

08000170 <wait>:
#include "lcd.h"
#include "stm32f103x6.h"
#include "stm32f103c6_gpio_driver.h"
GPIO_Pin_config_t PIN_Config;
void wait (int time)
{
 8000170:	b480      	push	{r7}
 8000172:	b085      	sub	sp, #20
 8000174:	af00      	add	r7, sp, #0
 8000176:	6078      	str	r0, [r7, #4]
	unsigned int i,j;
	for(i=0;i<time;i++)
 8000178:	2300      	movs	r3, #0
 800017a:	60fb      	str	r3, [r7, #12]
 800017c:	e00b      	b.n	8000196 <wait+0x26>
	{
		for(j=0;j<255;j++)
 800017e:	2300      	movs	r3, #0
 8000180:	60bb      	str	r3, [r7, #8]
 8000182:	e002      	b.n	800018a <wait+0x1a>
 8000184:	68bb      	ldr	r3, [r7, #8]
 8000186:	3301      	adds	r3, #1
 8000188:	60bb      	str	r3, [r7, #8]
 800018a:	68bb      	ldr	r3, [r7, #8]
 800018c:	2bfe      	cmp	r3, #254	; 0xfe
 800018e:	d9f9      	bls.n	8000184 <wait+0x14>
	for(i=0;i<time;i++)
 8000190:	68fb      	ldr	r3, [r7, #12]
 8000192:	3301      	adds	r3, #1
 8000194:	60fb      	str	r3, [r7, #12]
 8000196:	687b      	ldr	r3, [r7, #4]
 8000198:	68fa      	ldr	r2, [r7, #12]
 800019a:	429a      	cmp	r2, r3
 800019c:	d3ef      	bcc.n	800017e <wait+0xe>
		{
		}
	}
}
 800019e:	bf00      	nop
 80001a0:	3714      	adds	r7, #20
 80001a2:	46bd      	mov	sp, r7
 80001a4:	bc80      	pop	{r7}
 80001a6:	4770      	bx	lr

080001a8 <LCD_Clear_Screen>:
void LCD_Clear_Screen(void)
{
 80001a8:	b580      	push	{r7, lr}
 80001aa:	af00      	add	r7, sp, #0
	LCD_WRITE_COMMAND(LCD_CLEAR_SCREEN);
 80001ac:	2001      	movs	r0, #1
 80001ae:	f000 f947 	bl	8000440 <LCD_WRITE_COMMAND>
}
 80001b2:	bf00      	nop
 80001b4:	bd80      	pop	{r7, pc}
	...

080001b8 <LCD_ENABLE>:
void LCD_ENABLE()
{
 80001b8:	b580      	push	{r7, lr}
 80001ba:	af00      	add	r7, sp, #0
	//		lcd_ctrl&=~(1<<enable);
	MCAL_GPIO_write_Pin(lcd_ctrl,enable, GPIO_Pin_SET);
 80001bc:	2201      	movs	r2, #1
 80001be:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80001c2:	4807      	ldr	r0, [pc, #28]	; (80001e0 <LCD_ENABLE+0x28>)
 80001c4:	f000 fd17 	bl	8000bf6 <MCAL_GPIO_write_Pin>
							wait(50);
 80001c8:	2032      	movs	r0, #50	; 0x32
 80001ca:	f7ff ffd1 	bl	8000170 <wait>
	MCAL_GPIO_write_Pin(lcd_ctrl,enable, GPIO_Pin_RESET);
 80001ce:	2200      	movs	r2, #0
 80001d0:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80001d4:	4802      	ldr	r0, [pc, #8]	; (80001e0 <LCD_ENABLE+0x28>)
 80001d6:	f000 fd0e 	bl	8000bf6 <MCAL_GPIO_write_Pin>
}
 80001da:	bf00      	nop
 80001dc:	bd80      	pop	{r7, pc}
 80001de:	bf00      	nop
 80001e0:	40010800 	.word	0x40010800

080001e4 <LCD_is_busy>:
void LCD_is_busy(void)
{
 80001e4:	b580      	push	{r7, lr}
 80001e6:	af00      	add	r7, sp, #0
	//	lcd_port_datadir=0x0;
	PIN_Config.GPIO_Pin_number=GPIO_PIN_0;
 80001e8:	4b32      	ldr	r3, [pc, #200]	; (80002b4 <LCD_is_busy+0xd0>)
 80001ea:	2201      	movs	r2, #1
 80001ec:	801a      	strh	r2, [r3, #0]
	PIN_Config.GPIO_mode_define=GPIO_MODE_INPUT_FLO;
 80001ee:	4b31      	ldr	r3, [pc, #196]	; (80002b4 <LCD_is_busy+0xd0>)
 80001f0:	2201      	movs	r2, #1
 80001f2:	709a      	strb	r2, [r3, #2]
	MCAL_GPIO_INIT(GPIOA, &PIN_Config);
 80001f4:	492f      	ldr	r1, [pc, #188]	; (80002b4 <LCD_is_busy+0xd0>)
 80001f6:	4830      	ldr	r0, [pc, #192]	; (80002b8 <LCD_is_busy+0xd4>)
 80001f8:	f000 fc5c 	bl	8000ab4 <MCAL_GPIO_INIT>
	PIN_Config.GPIO_Pin_number=GPIO_PIN_1;
 80001fc:	4b2d      	ldr	r3, [pc, #180]	; (80002b4 <LCD_is_busy+0xd0>)
 80001fe:	2202      	movs	r2, #2
 8000200:	801a      	strh	r2, [r3, #0]
	PIN_Config.GPIO_mode_define=GPIO_MODE_INPUT_FLO;
 8000202:	4b2c      	ldr	r3, [pc, #176]	; (80002b4 <LCD_is_busy+0xd0>)
 8000204:	2201      	movs	r2, #1
 8000206:	709a      	strb	r2, [r3, #2]
	MCAL_GPIO_INIT(GPIOA, &PIN_Config);
 8000208:	492a      	ldr	r1, [pc, #168]	; (80002b4 <LCD_is_busy+0xd0>)
 800020a:	482b      	ldr	r0, [pc, #172]	; (80002b8 <LCD_is_busy+0xd4>)
 800020c:	f000 fc52 	bl	8000ab4 <MCAL_GPIO_INIT>
	PIN_Config.GPIO_Pin_number=GPIO_PIN_2;
 8000210:	4b28      	ldr	r3, [pc, #160]	; (80002b4 <LCD_is_busy+0xd0>)
 8000212:	2204      	movs	r2, #4
 8000214:	801a      	strh	r2, [r3, #0]
	PIN_Config.GPIO_mode_define=GPIO_MODE_INPUT_FLO;
 8000216:	4b27      	ldr	r3, [pc, #156]	; (80002b4 <LCD_is_busy+0xd0>)
 8000218:	2201      	movs	r2, #1
 800021a:	709a      	strb	r2, [r3, #2]
	MCAL_GPIO_INIT(GPIOA, &PIN_Config);
 800021c:	4925      	ldr	r1, [pc, #148]	; (80002b4 <LCD_is_busy+0xd0>)
 800021e:	4826      	ldr	r0, [pc, #152]	; (80002b8 <LCD_is_busy+0xd4>)
 8000220:	f000 fc48 	bl	8000ab4 <MCAL_GPIO_INIT>
	PIN_Config.GPIO_Pin_number=GPIO_PIN_3;
 8000224:	4b23      	ldr	r3, [pc, #140]	; (80002b4 <LCD_is_busy+0xd0>)
 8000226:	2208      	movs	r2, #8
 8000228:	801a      	strh	r2, [r3, #0]
	PIN_Config.GPIO_mode_define=GPIO_MODE_INPUT_FLO;
 800022a:	4b22      	ldr	r3, [pc, #136]	; (80002b4 <LCD_is_busy+0xd0>)
 800022c:	2201      	movs	r2, #1
 800022e:	709a      	strb	r2, [r3, #2]
	MCAL_GPIO_INIT(GPIOA, &PIN_Config);
 8000230:	4920      	ldr	r1, [pc, #128]	; (80002b4 <LCD_is_busy+0xd0>)
 8000232:	4821      	ldr	r0, [pc, #132]	; (80002b8 <LCD_is_busy+0xd4>)
 8000234:	f000 fc3e 	bl	8000ab4 <MCAL_GPIO_INIT>
	PIN_Config.GPIO_Pin_number=GPIO_PIN_4;
 8000238:	4b1e      	ldr	r3, [pc, #120]	; (80002b4 <LCD_is_busy+0xd0>)
 800023a:	2210      	movs	r2, #16
 800023c:	801a      	strh	r2, [r3, #0]
	PIN_Config.GPIO_mode_define=GPIO_MODE_INPUT_FLO;
 800023e:	4b1d      	ldr	r3, [pc, #116]	; (80002b4 <LCD_is_busy+0xd0>)
 8000240:	2201      	movs	r2, #1
 8000242:	709a      	strb	r2, [r3, #2]
	MCAL_GPIO_INIT(GPIOA, &PIN_Config);
 8000244:	491b      	ldr	r1, [pc, #108]	; (80002b4 <LCD_is_busy+0xd0>)
 8000246:	481c      	ldr	r0, [pc, #112]	; (80002b8 <LCD_is_busy+0xd4>)
 8000248:	f000 fc34 	bl	8000ab4 <MCAL_GPIO_INIT>
	PIN_Config.GPIO_Pin_number=GPIO_PIN_5;
 800024c:	4b19      	ldr	r3, [pc, #100]	; (80002b4 <LCD_is_busy+0xd0>)
 800024e:	2220      	movs	r2, #32
 8000250:	801a      	strh	r2, [r3, #0]
	PIN_Config.GPIO_mode_define=GPIO_MODE_INPUT_FLO;
 8000252:	4b18      	ldr	r3, [pc, #96]	; (80002b4 <LCD_is_busy+0xd0>)
 8000254:	2201      	movs	r2, #1
 8000256:	709a      	strb	r2, [r3, #2]
	MCAL_GPIO_INIT(GPIOA, &PIN_Config);
 8000258:	4916      	ldr	r1, [pc, #88]	; (80002b4 <LCD_is_busy+0xd0>)
 800025a:	4817      	ldr	r0, [pc, #92]	; (80002b8 <LCD_is_busy+0xd4>)
 800025c:	f000 fc2a 	bl	8000ab4 <MCAL_GPIO_INIT>
	PIN_Config.GPIO_Pin_number=GPIO_PIN_6;
 8000260:	4b14      	ldr	r3, [pc, #80]	; (80002b4 <LCD_is_busy+0xd0>)
 8000262:	2240      	movs	r2, #64	; 0x40
 8000264:	801a      	strh	r2, [r3, #0]
	PIN_Config.GPIO_mode_define=GPIO_MODE_INPUT_FLO;
 8000266:	4b13      	ldr	r3, [pc, #76]	; (80002b4 <LCD_is_busy+0xd0>)
 8000268:	2201      	movs	r2, #1
 800026a:	709a      	strb	r2, [r3, #2]
	MCAL_GPIO_INIT(GPIOA, &PIN_Config);
 800026c:	4911      	ldr	r1, [pc, #68]	; (80002b4 <LCD_is_busy+0xd0>)
 800026e:	4812      	ldr	r0, [pc, #72]	; (80002b8 <LCD_is_busy+0xd4>)
 8000270:	f000 fc20 	bl	8000ab4 <MCAL_GPIO_INIT>
	PIN_Config.GPIO_Pin_number=GPIO_PIN_7;
 8000274:	4b0f      	ldr	r3, [pc, #60]	; (80002b4 <LCD_is_busy+0xd0>)
 8000276:	2280      	movs	r2, #128	; 0x80
 8000278:	801a      	strh	r2, [r3, #0]
	PIN_Config.GPIO_mode_define=GPIO_MODE_INPUT_FLO;
 800027a:	4b0e      	ldr	r3, [pc, #56]	; (80002b4 <LCD_is_busy+0xd0>)
 800027c:	2201      	movs	r2, #1
 800027e:	709a      	strb	r2, [r3, #2]
	MCAL_GPIO_INIT(GPIOA, &PIN_Config);
 8000280:	490c      	ldr	r1, [pc, #48]	; (80002b4 <LCD_is_busy+0xd0>)
 8000282:	480d      	ldr	r0, [pc, #52]	; (80002b8 <LCD_is_busy+0xd4>)
 8000284:	f000 fc16 	bl	8000ab4 <MCAL_GPIO_INIT>
	//	lcd_ctrl|=1<<rw;
	MCAL_GPIO_write_Pin(GPIOA, rw, GPIO_Pin_SET);
 8000288:	2201      	movs	r2, #1
 800028a:	f44f 7100 	mov.w	r1, #512	; 0x200
 800028e:	480a      	ldr	r0, [pc, #40]	; (80002b8 <LCD_is_busy+0xd4>)
 8000290:	f000 fcb1 	bl	8000bf6 <MCAL_GPIO_write_Pin>
	//	lcd_ctrl&=~(1<<rs);
	MCAL_GPIO_write_Pin(GPIOA, rs, GPIO_Pin_RESET);
 8000294:	2200      	movs	r2, #0
 8000296:	f44f 7180 	mov.w	r1, #256	; 0x100
 800029a:	4807      	ldr	r0, [pc, #28]	; (80002b8 <LCD_is_busy+0xd4>)
 800029c:	f000 fcab 	bl	8000bf6 <MCAL_GPIO_write_Pin>
	LCD_ENABLE(); 
 80002a0:	f7ff ff8a 	bl	80001b8 <LCD_ENABLE>
	//	lcd_port_datadir=0xff;
	//	lcd_ctrl&=~(1<<rw);
	MCAL_GPIO_write_Pin(GPIOA, rw, GPIO_Pin_RESET);
 80002a4:	2200      	movs	r2, #0
 80002a6:	f44f 7100 	mov.w	r1, #512	; 0x200
 80002aa:	4803      	ldr	r0, [pc, #12]	; (80002b8 <LCD_is_busy+0xd4>)
 80002ac:	f000 fca3 	bl	8000bf6 <MCAL_GPIO_write_Pin>
}
 80002b0:	bf00      	nop
 80002b2:	bd80      	pop	{r7, pc}
 80002b4:	20000024 	.word	0x20000024
 80002b8:	40010800 	.word	0x40010800

080002bc <LCD_init>:

void LCD_init()
{
 80002bc:	b580      	push	{r7, lr}
 80002be:	af00      	add	r7, sp, #0
	wait(20);
 80002c0:	2014      	movs	r0, #20
 80002c2:	f7ff ff55 	bl	8000170 <wait>
	LCD_is_busy();
 80002c6:	f7ff ff8d 	bl	80001e4 <LCD_is_busy>
	//	lcd_port_ctrldir|=(1<<enable)|(1<<rs)|(1<<rw);
	PIN_Config.GPIO_Pin_number=rs;
 80002ca:	4b5b      	ldr	r3, [pc, #364]	; (8000438 <LCD_init+0x17c>)
 80002cc:	f44f 7280 	mov.w	r2, #256	; 0x100
 80002d0:	801a      	strh	r2, [r3, #0]
	PIN_Config.GPIO_mode_define=GPIO_MODE_OUTPUT_PP;
 80002d2:	4b59      	ldr	r3, [pc, #356]	; (8000438 <LCD_init+0x17c>)
 80002d4:	2204      	movs	r2, #4
 80002d6:	709a      	strb	r2, [r3, #2]
	PIN_Config.GPIO_output_speed=GPIO_speed_10M;
 80002d8:	4b57      	ldr	r3, [pc, #348]	; (8000438 <LCD_init+0x17c>)
 80002da:	2201      	movs	r2, #1
 80002dc:	70da      	strb	r2, [r3, #3]
	MCAL_GPIO_INIT(GPIOA, &PIN_Config);
 80002de:	4956      	ldr	r1, [pc, #344]	; (8000438 <LCD_init+0x17c>)
 80002e0:	4856      	ldr	r0, [pc, #344]	; (800043c <LCD_init+0x180>)
 80002e2:	f000 fbe7 	bl	8000ab4 <MCAL_GPIO_INIT>
	PIN_Config.GPIO_Pin_number=rw;
 80002e6:	4b54      	ldr	r3, [pc, #336]	; (8000438 <LCD_init+0x17c>)
 80002e8:	f44f 7200 	mov.w	r2, #512	; 0x200
 80002ec:	801a      	strh	r2, [r3, #0]
	PIN_Config.GPIO_mode_define=GPIO_MODE_OUTPUT_PP;
 80002ee:	4b52      	ldr	r3, [pc, #328]	; (8000438 <LCD_init+0x17c>)
 80002f0:	2204      	movs	r2, #4
 80002f2:	709a      	strb	r2, [r3, #2]
	PIN_Config.GPIO_output_speed=GPIO_speed_10M;
 80002f4:	4b50      	ldr	r3, [pc, #320]	; (8000438 <LCD_init+0x17c>)
 80002f6:	2201      	movs	r2, #1
 80002f8:	70da      	strb	r2, [r3, #3]
	MCAL_GPIO_INIT(GPIOA, &PIN_Config);
 80002fa:	494f      	ldr	r1, [pc, #316]	; (8000438 <LCD_init+0x17c>)
 80002fc:	484f      	ldr	r0, [pc, #316]	; (800043c <LCD_init+0x180>)
 80002fe:	f000 fbd9 	bl	8000ab4 <MCAL_GPIO_INIT>
	PIN_Config.GPIO_Pin_number=enable;
 8000302:	4b4d      	ldr	r3, [pc, #308]	; (8000438 <LCD_init+0x17c>)
 8000304:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8000308:	801a      	strh	r2, [r3, #0]
	PIN_Config.GPIO_mode_define=GPIO_MODE_OUTPUT_PP;
 800030a:	4b4b      	ldr	r3, [pc, #300]	; (8000438 <LCD_init+0x17c>)
 800030c:	2204      	movs	r2, #4
 800030e:	709a      	strb	r2, [r3, #2]
	PIN_Config.GPIO_output_speed=GPIO_speed_10M;
 8000310:	4b49      	ldr	r3, [pc, #292]	; (8000438 <LCD_init+0x17c>)
 8000312:	2201      	movs	r2, #1
 8000314:	70da      	strb	r2, [r3, #3]
	MCAL_GPIO_INIT(GPIOA, &PIN_Config);
 8000316:	4948      	ldr	r1, [pc, #288]	; (8000438 <LCD_init+0x17c>)
 8000318:	4848      	ldr	r0, [pc, #288]	; (800043c <LCD_init+0x180>)
 800031a:	f000 fbcb 	bl	8000ab4 <MCAL_GPIO_INIT>
	//	lcd_port_datadir=0xff;
	PIN_Config.GPIO_Pin_number=GPIO_PIN_0;
 800031e:	4b46      	ldr	r3, [pc, #280]	; (8000438 <LCD_init+0x17c>)
 8000320:	2201      	movs	r2, #1
 8000322:	801a      	strh	r2, [r3, #0]
	PIN_Config.GPIO_mode_define=GPIO_MODE_OUTPUT_PP;
 8000324:	4b44      	ldr	r3, [pc, #272]	; (8000438 <LCD_init+0x17c>)
 8000326:	2204      	movs	r2, #4
 8000328:	709a      	strb	r2, [r3, #2]
	PIN_Config.GPIO_output_speed=GPIO_speed_10M;
 800032a:	4b43      	ldr	r3, [pc, #268]	; (8000438 <LCD_init+0x17c>)
 800032c:	2201      	movs	r2, #1
 800032e:	70da      	strb	r2, [r3, #3]
	MCAL_GPIO_INIT(GPIOA,&PIN_Config);
 8000330:	4941      	ldr	r1, [pc, #260]	; (8000438 <LCD_init+0x17c>)
 8000332:	4842      	ldr	r0, [pc, #264]	; (800043c <LCD_init+0x180>)
 8000334:	f000 fbbe 	bl	8000ab4 <MCAL_GPIO_INIT>
	PIN_Config.GPIO_Pin_number=GPIO_PIN_1;
 8000338:	4b3f      	ldr	r3, [pc, #252]	; (8000438 <LCD_init+0x17c>)
 800033a:	2202      	movs	r2, #2
 800033c:	801a      	strh	r2, [r3, #0]
	PIN_Config.GPIO_mode_define=GPIO_MODE_OUTPUT_PP;
 800033e:	4b3e      	ldr	r3, [pc, #248]	; (8000438 <LCD_init+0x17c>)
 8000340:	2204      	movs	r2, #4
 8000342:	709a      	strb	r2, [r3, #2]
	PIN_Config.GPIO_output_speed=GPIO_speed_10M;
 8000344:	4b3c      	ldr	r3, [pc, #240]	; (8000438 <LCD_init+0x17c>)
 8000346:	2201      	movs	r2, #1
 8000348:	70da      	strb	r2, [r3, #3]
	MCAL_GPIO_INIT(GPIOA, &PIN_Config);
 800034a:	493b      	ldr	r1, [pc, #236]	; (8000438 <LCD_init+0x17c>)
 800034c:	483b      	ldr	r0, [pc, #236]	; (800043c <LCD_init+0x180>)
 800034e:	f000 fbb1 	bl	8000ab4 <MCAL_GPIO_INIT>
	PIN_Config.GPIO_Pin_number=GPIO_PIN_2;
 8000352:	4b39      	ldr	r3, [pc, #228]	; (8000438 <LCD_init+0x17c>)
 8000354:	2204      	movs	r2, #4
 8000356:	801a      	strh	r2, [r3, #0]
	PIN_Config.GPIO_mode_define=GPIO_MODE_OUTPUT_PP;
 8000358:	4b37      	ldr	r3, [pc, #220]	; (8000438 <LCD_init+0x17c>)
 800035a:	2204      	movs	r2, #4
 800035c:	709a      	strb	r2, [r3, #2]
	PIN_Config.GPIO_output_speed=GPIO_speed_10M;
 800035e:	4b36      	ldr	r3, [pc, #216]	; (8000438 <LCD_init+0x17c>)
 8000360:	2201      	movs	r2, #1
 8000362:	70da      	strb	r2, [r3, #3]
	MCAL_GPIO_INIT(GPIOA, &PIN_Config);
 8000364:	4934      	ldr	r1, [pc, #208]	; (8000438 <LCD_init+0x17c>)
 8000366:	4835      	ldr	r0, [pc, #212]	; (800043c <LCD_init+0x180>)
 8000368:	f000 fba4 	bl	8000ab4 <MCAL_GPIO_INIT>
	PIN_Config.GPIO_Pin_number=GPIO_PIN_3;
 800036c:	4b32      	ldr	r3, [pc, #200]	; (8000438 <LCD_init+0x17c>)
 800036e:	2208      	movs	r2, #8
 8000370:	801a      	strh	r2, [r3, #0]
	PIN_Config.GPIO_mode_define=GPIO_MODE_OUTPUT_PP;
 8000372:	4b31      	ldr	r3, [pc, #196]	; (8000438 <LCD_init+0x17c>)
 8000374:	2204      	movs	r2, #4
 8000376:	709a      	strb	r2, [r3, #2]
	PIN_Config.GPIO_output_speed=GPIO_speed_10M;
 8000378:	4b2f      	ldr	r3, [pc, #188]	; (8000438 <LCD_init+0x17c>)
 800037a:	2201      	movs	r2, #1
 800037c:	70da      	strb	r2, [r3, #3]
	MCAL_GPIO_INIT(GPIOA, &PIN_Config);
 800037e:	492e      	ldr	r1, [pc, #184]	; (8000438 <LCD_init+0x17c>)
 8000380:	482e      	ldr	r0, [pc, #184]	; (800043c <LCD_init+0x180>)
 8000382:	f000 fb97 	bl	8000ab4 <MCAL_GPIO_INIT>
	PIN_Config.GPIO_Pin_number=GPIO_PIN_4;
 8000386:	4b2c      	ldr	r3, [pc, #176]	; (8000438 <LCD_init+0x17c>)
 8000388:	2210      	movs	r2, #16
 800038a:	801a      	strh	r2, [r3, #0]
	PIN_Config.GPIO_mode_define=GPIO_MODE_OUTPUT_PP;
 800038c:	4b2a      	ldr	r3, [pc, #168]	; (8000438 <LCD_init+0x17c>)
 800038e:	2204      	movs	r2, #4
 8000390:	709a      	strb	r2, [r3, #2]
	PIN_Config.GPIO_output_speed=GPIO_speed_10M;
 8000392:	4b29      	ldr	r3, [pc, #164]	; (8000438 <LCD_init+0x17c>)
 8000394:	2201      	movs	r2, #1
 8000396:	70da      	strb	r2, [r3, #3]
	MCAL_GPIO_INIT(GPIOA, &PIN_Config);
 8000398:	4927      	ldr	r1, [pc, #156]	; (8000438 <LCD_init+0x17c>)
 800039a:	4828      	ldr	r0, [pc, #160]	; (800043c <LCD_init+0x180>)
 800039c:	f000 fb8a 	bl	8000ab4 <MCAL_GPIO_INIT>
	PIN_Config.GPIO_Pin_number=GPIO_PIN_5;
 80003a0:	4b25      	ldr	r3, [pc, #148]	; (8000438 <LCD_init+0x17c>)
 80003a2:	2220      	movs	r2, #32
 80003a4:	801a      	strh	r2, [r3, #0]
	PIN_Config.GPIO_mode_define=GPIO_MODE_OUTPUT_PP;
 80003a6:	4b24      	ldr	r3, [pc, #144]	; (8000438 <LCD_init+0x17c>)
 80003a8:	2204      	movs	r2, #4
 80003aa:	709a      	strb	r2, [r3, #2]
	PIN_Config.GPIO_output_speed=GPIO_speed_10M;
 80003ac:	4b22      	ldr	r3, [pc, #136]	; (8000438 <LCD_init+0x17c>)
 80003ae:	2201      	movs	r2, #1
 80003b0:	70da      	strb	r2, [r3, #3]
	MCAL_GPIO_INIT(GPIOA, &PIN_Config);
 80003b2:	4921      	ldr	r1, [pc, #132]	; (8000438 <LCD_init+0x17c>)
 80003b4:	4821      	ldr	r0, [pc, #132]	; (800043c <LCD_init+0x180>)
 80003b6:	f000 fb7d 	bl	8000ab4 <MCAL_GPIO_INIT>
	PIN_Config.GPIO_Pin_number=GPIO_PIN_6;
 80003ba:	4b1f      	ldr	r3, [pc, #124]	; (8000438 <LCD_init+0x17c>)
 80003bc:	2240      	movs	r2, #64	; 0x40
 80003be:	801a      	strh	r2, [r3, #0]
	PIN_Config.GPIO_mode_define=GPIO_MODE_OUTPUT_PP;
 80003c0:	4b1d      	ldr	r3, [pc, #116]	; (8000438 <LCD_init+0x17c>)
 80003c2:	2204      	movs	r2, #4
 80003c4:	709a      	strb	r2, [r3, #2]
	PIN_Config.GPIO_output_speed=GPIO_speed_10M;
 80003c6:	4b1c      	ldr	r3, [pc, #112]	; (8000438 <LCD_init+0x17c>)
 80003c8:	2201      	movs	r2, #1
 80003ca:	70da      	strb	r2, [r3, #3]
	MCAL_GPIO_INIT(GPIOA, &PIN_Config);
 80003cc:	491a      	ldr	r1, [pc, #104]	; (8000438 <LCD_init+0x17c>)
 80003ce:	481b      	ldr	r0, [pc, #108]	; (800043c <LCD_init+0x180>)
 80003d0:	f000 fb70 	bl	8000ab4 <MCAL_GPIO_INIT>
	PIN_Config.GPIO_Pin_number=GPIO_PIN_7;
 80003d4:	4b18      	ldr	r3, [pc, #96]	; (8000438 <LCD_init+0x17c>)
 80003d6:	2280      	movs	r2, #128	; 0x80
 80003d8:	801a      	strh	r2, [r3, #0]
	PIN_Config.GPIO_mode_define=GPIO_MODE_OUTPUT_PP;
 80003da:	4b17      	ldr	r3, [pc, #92]	; (8000438 <LCD_init+0x17c>)
 80003dc:	2204      	movs	r2, #4
 80003de:	709a      	strb	r2, [r3, #2]
	PIN_Config.GPIO_output_speed=GPIO_speed_10M;
 80003e0:	4b15      	ldr	r3, [pc, #84]	; (8000438 <LCD_init+0x17c>)
 80003e2:	2201      	movs	r2, #1
 80003e4:	70da      	strb	r2, [r3, #3]
	MCAL_GPIO_INIT(GPIOA, &PIN_Config);
 80003e6:	4914      	ldr	r1, [pc, #80]	; (8000438 <LCD_init+0x17c>)
 80003e8:	4814      	ldr	r0, [pc, #80]	; (800043c <LCD_init+0x180>)
 80003ea:	f000 fb63 	bl	8000ab4 <MCAL_GPIO_INIT>
	MCAL_GPIO_write_Pin(GPIOA,enable,GPIO_Pin_RESET);
 80003ee:	2200      	movs	r2, #0
 80003f0:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80003f4:	4811      	ldr	r0, [pc, #68]	; (800043c <LCD_init+0x180>)
 80003f6:	f000 fbfe 	bl	8000bf6 <MCAL_GPIO_write_Pin>
	MCAL_GPIO_write_Pin(GPIOA,rw,GPIO_Pin_RESET);
 80003fa:	2200      	movs	r2, #0
 80003fc:	f44f 7100 	mov.w	r1, #512	; 0x200
 8000400:	480e      	ldr	r0, [pc, #56]	; (800043c <LCD_init+0x180>)
 8000402:	f000 fbf8 	bl	8000bf6 <MCAL_GPIO_write_Pin>
	MCAL_GPIO_write_Pin(GPIOA,rs,GPIO_Pin_RESET);
 8000406:	2200      	movs	r2, #0
 8000408:	f44f 7180 	mov.w	r1, #256	; 0x100
 800040c:	480b      	ldr	r0, [pc, #44]	; (800043c <LCD_init+0x180>)
 800040e:	f000 fbf2 	bl	8000bf6 <MCAL_GPIO_write_Pin>
	wait(15);
 8000412:	200f      	movs	r0, #15
 8000414:	f7ff feac 	bl	8000170 <wait>
	LCD_Clear_Screen();
 8000418:	f7ff fec6 	bl	80001a8 <LCD_Clear_Screen>
	LCD_WRITE_COMMAND(LCD_FUNCTION_8BIT_2LINES);
 800041c:	2038      	movs	r0, #56	; 0x38
 800041e:	f000 f80f 	bl	8000440 <LCD_WRITE_COMMAND>
	LCD_WRITE_COMMAND(LCD_ENTRY_MODE);
 8000422:	2006      	movs	r0, #6
 8000424:	f000 f80c 	bl	8000440 <LCD_WRITE_COMMAND>
	LCD_WRITE_COMMAND(LCD_BEGIN_AT_FIRST_ROW);
 8000428:	2080      	movs	r0, #128	; 0x80
 800042a:	f000 f809 	bl	8000440 <LCD_WRITE_COMMAND>
	LCD_WRITE_COMMAND(LCD_DISP_ON_CURSOR_BLINK);
 800042e:	200f      	movs	r0, #15
 8000430:	f000 f806 	bl	8000440 <LCD_WRITE_COMMAND>


};
 8000434:	bf00      	nop
 8000436:	bd80      	pop	{r7, pc}
 8000438:	20000024 	.word	0x20000024
 800043c:	40010800 	.word	0x40010800

08000440 <LCD_WRITE_COMMAND>:
void LCD_WRITE_COMMAND(unsigned char command)
{
 8000440:	b580      	push	{r7, lr}
 8000442:	b082      	sub	sp, #8
 8000444:	af00      	add	r7, sp, #0
 8000446:	4603      	mov	r3, r0
 8000448:	71fb      	strb	r3, [r7, #7]
//	LCD_is_busy();
//	lcd_port=command;
	MCAL_GPIO_write_Port(lcd_ctrl,command);
 800044a:	79fb      	ldrb	r3, [r7, #7]
 800044c:	b29b      	uxth	r3, r3
 800044e:	4619      	mov	r1, r3
 8000450:	480b      	ldr	r0, [pc, #44]	; (8000480 <LCD_WRITE_COMMAND+0x40>)
 8000452:	f000 fbee 	bl	8000c32 <MCAL_GPIO_write_Port>
//	lcd_ctrl&=~(1<<rs);
	MCAL_GPIO_write_Pin(lcd_ctrl, rs, GPIO_Pin_RESET);
 8000456:	2200      	movs	r2, #0
 8000458:	f44f 7180 	mov.w	r1, #256	; 0x100
 800045c:	4808      	ldr	r0, [pc, #32]	; (8000480 <LCD_WRITE_COMMAND+0x40>)
 800045e:	f000 fbca 	bl	8000bf6 <MCAL_GPIO_write_Pin>
//	lcd_ctrl&=~(1<<rw );
	MCAL_GPIO_write_Pin(lcd_ctrl, rw, GPIO_Pin_RESET);
 8000462:	2200      	movs	r2, #0
 8000464:	f44f 7100 	mov.w	r1, #512	; 0x200
 8000468:	4805      	ldr	r0, [pc, #20]	; (8000480 <LCD_WRITE_COMMAND+0x40>)
 800046a:	f000 fbc4 	bl	8000bf6 <MCAL_GPIO_write_Pin>
	wait(1);
 800046e:	2001      	movs	r0, #1
 8000470:	f7ff fe7e 	bl	8000170 <wait>
	LCD_ENABLE();
 8000474:	f7ff fea0 	bl	80001b8 <LCD_ENABLE>


}
 8000478:	bf00      	nop
 800047a:	3708      	adds	r7, #8
 800047c:	46bd      	mov	sp, r7
 800047e:	bd80      	pop	{r7, pc}
 8000480:	40010800 	.word	0x40010800

08000484 <LCD_WRITE_CHAR>:
void LCD_WRITE_CHAR(unsigned char data)
{
 8000484:	b580      	push	{r7, lr}
 8000486:	b082      	sub	sp, #8
 8000488:	af00      	add	r7, sp, #0
 800048a:	4603      	mov	r3, r0
 800048c:	71fb      	strb	r3, [r7, #7]
//	lcd_ctrl|=(1<<rs);
	//MCAL_GPIO_write_Pin(lcd_ctrl, rs , GPIO_Pin_SET);
//	LCD_is_busy();
//	lcd_port=data;
	MCAL_GPIO_write_Port(lcd_ctrl, data);
 800048e:	79fb      	ldrb	r3, [r7, #7]
 8000490:	b29b      	uxth	r3, r3
 8000492:	4619      	mov	r1, r3
 8000494:	480b      	ldr	r0, [pc, #44]	; (80004c4 <LCD_WRITE_CHAR+0x40>)
 8000496:	f000 fbcc 	bl	8000c32 <MCAL_GPIO_write_Port>
//	lcd_ctrl&=~(1<<rw );
	MCAL_GPIO_write_Pin(lcd_ctrl, rw, GPIO_Pin_RESET);
 800049a:	2200      	movs	r2, #0
 800049c:	f44f 7100 	mov.w	r1, #512	; 0x200
 80004a0:	4808      	ldr	r0, [pc, #32]	; (80004c4 <LCD_WRITE_CHAR+0x40>)
 80004a2:	f000 fba8 	bl	8000bf6 <MCAL_GPIO_write_Pin>
//	lcd_ctrl|=(1<<rs);
	MCAL_GPIO_write_Pin(lcd_ctrl, rs , GPIO_Pin_SET);
 80004a6:	2201      	movs	r2, #1
 80004a8:	f44f 7180 	mov.w	r1, #256	; 0x100
 80004ac:	4805      	ldr	r0, [pc, #20]	; (80004c4 <LCD_WRITE_CHAR+0x40>)
 80004ae:	f000 fba2 	bl	8000bf6 <MCAL_GPIO_write_Pin>
	wait(1);
 80004b2:	2001      	movs	r0, #1
 80004b4:	f7ff fe5c 	bl	8000170 <wait>
	LCD_ENABLE();
 80004b8:	f7ff fe7e 	bl	80001b8 <LCD_ENABLE>

}
 80004bc:	bf00      	nop
 80004be:	3708      	adds	r7, #8
 80004c0:	46bd      	mov	sp, r7
 80004c2:	bd80      	pop	{r7, pc}
 80004c4:	40010800 	.word	0x40010800

080004c8 <LCD_GO_TO_XY>:
void LCD_GO_TO_XY(int line ,int position)
{
 80004c8:	b580      	push	{r7, lr}
 80004ca:	b082      	sub	sp, #8
 80004cc:	af00      	add	r7, sp, #0
 80004ce:	6078      	str	r0, [r7, #4]
 80004d0:	6039      	str	r1, [r7, #0]
	if(line==2)
 80004d2:	687b      	ldr	r3, [r7, #4]
 80004d4:	2b02      	cmp	r3, #2
 80004d6:	d107      	bne.n	80004e8 <LCD_GO_TO_XY+0x20>
	{
		LCD_WRITE_COMMAND(LCD_BEGIN_AT_SECOND_ROW+position);
 80004d8:	683b      	ldr	r3, [r7, #0]
 80004da:	b2db      	uxtb	r3, r3
 80004dc:	3b40      	subs	r3, #64	; 0x40
 80004de:	b2db      	uxtb	r3, r3
 80004e0:	4618      	mov	r0, r3
 80004e2:	f7ff ffad 	bl	8000440 <LCD_WRITE_COMMAND>
	}
	else if(line==1)
	{
		LCD_WRITE_COMMAND(LCD_BEGIN_AT_FIRST_ROW+position);
	}
}
 80004e6:	e009      	b.n	80004fc <LCD_GO_TO_XY+0x34>
	else if(line==1)
 80004e8:	687b      	ldr	r3, [r7, #4]
 80004ea:	2b01      	cmp	r3, #1
 80004ec:	d106      	bne.n	80004fc <LCD_GO_TO_XY+0x34>
		LCD_WRITE_COMMAND(LCD_BEGIN_AT_FIRST_ROW+position);
 80004ee:	683b      	ldr	r3, [r7, #0]
 80004f0:	b2db      	uxtb	r3, r3
 80004f2:	3b80      	subs	r3, #128	; 0x80
 80004f4:	b2db      	uxtb	r3, r3
 80004f6:	4618      	mov	r0, r3
 80004f8:	f7ff ffa2 	bl	8000440 <LCD_WRITE_COMMAND>
}
 80004fc:	bf00      	nop
 80004fe:	3708      	adds	r7, #8
 8000500:	46bd      	mov	sp, r7
 8000502:	bd80      	pop	{r7, pc}

08000504 <LCD_WRITE_STRING>:
void LCD_WRITE_STRING( char *data)
{
 8000504:	b580      	push	{r7, lr}
 8000506:	b084      	sub	sp, #16
 8000508:	af00      	add	r7, sp, #0
 800050a:	6078      	str	r0, [r7, #4]
	int count=0;
 800050c:	2300      	movs	r3, #0
 800050e:	60fb      	str	r3, [r7, #12]
	while(*data>0)
 8000510:	e01d      	b.n	800054e <LCD_WRITE_STRING+0x4a>
	{
		if(count==16)
 8000512:	68fb      	ldr	r3, [r7, #12]
 8000514:	2b10      	cmp	r3, #16
 8000516:	d104      	bne.n	8000522 <LCD_WRITE_STRING+0x1e>
		{
			LCD_GO_TO_XY(2,0);
 8000518:	2100      	movs	r1, #0
 800051a:	2002      	movs	r0, #2
 800051c:	f7ff ffd4 	bl	80004c8 <LCD_GO_TO_XY>
 8000520:	e00a      	b.n	8000538 <LCD_WRITE_STRING+0x34>
		}
		else if(count==32)
 8000522:	68fb      	ldr	r3, [r7, #12]
 8000524:	2b20      	cmp	r3, #32
 8000526:	d107      	bne.n	8000538 <LCD_WRITE_STRING+0x34>
		{
			LCD_Clear_Screen();
 8000528:	f7ff fe3e 	bl	80001a8 <LCD_Clear_Screen>
			LCD_GO_TO_XY(1,0);
 800052c:	2100      	movs	r1, #0
 800052e:	2001      	movs	r0, #1
 8000530:	f7ff ffca 	bl	80004c8 <LCD_GO_TO_XY>
			count=0;
 8000534:	2300      	movs	r3, #0
 8000536:	60fb      	str	r3, [r7, #12]
		}
		LCD_WRITE_CHAR(*data);
 8000538:	687b      	ldr	r3, [r7, #4]
 800053a:	781b      	ldrb	r3, [r3, #0]
 800053c:	4618      	mov	r0, r3
 800053e:	f7ff ffa1 	bl	8000484 <LCD_WRITE_CHAR>
		data++;
 8000542:	687b      	ldr	r3, [r7, #4]
 8000544:	3301      	adds	r3, #1
 8000546:	607b      	str	r3, [r7, #4]
		count++;
 8000548:	68fb      	ldr	r3, [r7, #12]
 800054a:	3301      	adds	r3, #1
 800054c:	60fb      	str	r3, [r7, #12]
	while(*data>0)
 800054e:	687b      	ldr	r3, [r7, #4]
 8000550:	781b      	ldrb	r3, [r3, #0]
 8000552:	2b00      	cmp	r3, #0
 8000554:	d1dd      	bne.n	8000512 <LCD_WRITE_STRING+0xe>
	}	
}
 8000556:	bf00      	nop
 8000558:	3710      	adds	r7, #16
 800055a:	46bd      	mov	sp, r7
 800055c:	bd80      	pop	{r7, pc}
	...

08000560 <clock_init>:
#define SIX 0x02
#define SEVEN 0x19
#define EIGHT 0x00
#define NINE 0x10
void clock_init(void)
{
 8000560:	b480      	push	{r7}
 8000562:	af00      	add	r7, sp, #0
	//Enabling the clock to APB2 bus GPIOA
	RCC_GPIOA_CLK_EN();
 8000564:	4b07      	ldr	r3, [pc, #28]	; (8000584 <clock_init+0x24>)
 8000566:	699b      	ldr	r3, [r3, #24]
 8000568:	4a06      	ldr	r2, [pc, #24]	; (8000584 <clock_init+0x24>)
 800056a:	f043 0304 	orr.w	r3, r3, #4
 800056e:	6193      	str	r3, [r2, #24]
	//Enabling the clock to APB2 bus GPIOB
	RCC_GPIOB_CLK_EN();
 8000570:	4b04      	ldr	r3, [pc, #16]	; (8000584 <clock_init+0x24>)
 8000572:	699b      	ldr	r3, [r3, #24]
 8000574:	4a03      	ldr	r2, [pc, #12]	; (8000584 <clock_init+0x24>)
 8000576:	f043 0308 	orr.w	r3, r3, #8
 800057a:	6193      	str	r3, [r2, #24]
}
 800057c:	bf00      	nop
 800057e:	46bd      	mov	sp, r7
 8000580:	bc80      	pop	{r7}
 8000582:	4770      	bx	lr
 8000584:	40021000 	.word	0x40021000

08000588 <GPIO_INIT>:
void GPIO_INIT()
{
 8000588:	b580      	push	{r7, lr}
 800058a:	b082      	sub	sp, #8
 800058c:	af00      	add	r7, sp, #0
	GPIO_Pin_config_t PIN_Config;
	PIN_Config.GPIO_Pin_number=GPIO_PIN_9;
 800058e:	f44f 7300 	mov.w	r3, #512	; 0x200
 8000592:	80bb      	strh	r3, [r7, #4]
	PIN_Config.GPIO_output_speed=GPIO_speed_10M;
 8000594:	2301      	movs	r3, #1
 8000596:	71fb      	strb	r3, [r7, #7]
	PIN_Config.GPIO_mode_define=GPIO_MODE_OUTPUT_PP;
 8000598:	2304      	movs	r3, #4
 800059a:	71bb      	strb	r3, [r7, #6]
	MCAL_GPIO_INIT(GPIOB,&PIN_Config);
 800059c:	1d3b      	adds	r3, r7, #4
 800059e:	4619      	mov	r1, r3
 80005a0:	4827      	ldr	r0, [pc, #156]	; (8000640 <GPIO_INIT+0xb8>)
 80005a2:	f000 fa87 	bl	8000ab4 <MCAL_GPIO_INIT>
	PIN_Config.GPIO_Pin_number=GPIO_PIN_10;
 80005a6:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80005aa:	80bb      	strh	r3, [r7, #4]
	PIN_Config.GPIO_output_speed=GPIO_speed_10M;
 80005ac:	2301      	movs	r3, #1
 80005ae:	71fb      	strb	r3, [r7, #7]
	PIN_Config.GPIO_mode_define=GPIO_MODE_OUTPUT_PP;
 80005b0:	2304      	movs	r3, #4
 80005b2:	71bb      	strb	r3, [r7, #6]
	MCAL_GPIO_INIT(GPIOB,&PIN_Config);
 80005b4:	1d3b      	adds	r3, r7, #4
 80005b6:	4619      	mov	r1, r3
 80005b8:	4821      	ldr	r0, [pc, #132]	; (8000640 <GPIO_INIT+0xb8>)
 80005ba:	f000 fa7b 	bl	8000ab4 <MCAL_GPIO_INIT>
	PIN_Config.GPIO_Pin_number=GPIO_PIN_11;
 80005be:	f44f 6300 	mov.w	r3, #2048	; 0x800
 80005c2:	80bb      	strh	r3, [r7, #4]
	PIN_Config.GPIO_output_speed=GPIO_speed_10M;
 80005c4:	2301      	movs	r3, #1
 80005c6:	71fb      	strb	r3, [r7, #7]
	PIN_Config.GPIO_mode_define=GPIO_MODE_OUTPUT_PP;
 80005c8:	2304      	movs	r3, #4
 80005ca:	71bb      	strb	r3, [r7, #6]
	MCAL_GPIO_INIT(GPIOB,&PIN_Config);
 80005cc:	1d3b      	adds	r3, r7, #4
 80005ce:	4619      	mov	r1, r3
 80005d0:	481b      	ldr	r0, [pc, #108]	; (8000640 <GPIO_INIT+0xb8>)
 80005d2:	f000 fa6f 	bl	8000ab4 <MCAL_GPIO_INIT>
	PIN_Config.GPIO_Pin_number=GPIO_PIN_12;
 80005d6:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80005da:	80bb      	strh	r3, [r7, #4]
	PIN_Config.GPIO_output_speed=GPIO_speed_10M;
 80005dc:	2301      	movs	r3, #1
 80005de:	71fb      	strb	r3, [r7, #7]
	PIN_Config.GPIO_mode_define=GPIO_MODE_OUTPUT_PP;
 80005e0:	2304      	movs	r3, #4
 80005e2:	71bb      	strb	r3, [r7, #6]
	MCAL_GPIO_INIT(GPIOB,&PIN_Config);
 80005e4:	1d3b      	adds	r3, r7, #4
 80005e6:	4619      	mov	r1, r3
 80005e8:	4815      	ldr	r0, [pc, #84]	; (8000640 <GPIO_INIT+0xb8>)
 80005ea:	f000 fa63 	bl	8000ab4 <MCAL_GPIO_INIT>
	PIN_Config.GPIO_Pin_number=GPIO_PIN_13;
 80005ee:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80005f2:	80bb      	strh	r3, [r7, #4]
	PIN_Config.GPIO_output_speed=GPIO_speed_10M;
 80005f4:	2301      	movs	r3, #1
 80005f6:	71fb      	strb	r3, [r7, #7]
	PIN_Config.GPIO_mode_define=GPIO_MODE_OUTPUT_PP;
 80005f8:	2304      	movs	r3, #4
 80005fa:	71bb      	strb	r3, [r7, #6]
	MCAL_GPIO_INIT(GPIOB,&PIN_Config);
 80005fc:	1d3b      	adds	r3, r7, #4
 80005fe:	4619      	mov	r1, r3
 8000600:	480f      	ldr	r0, [pc, #60]	; (8000640 <GPIO_INIT+0xb8>)
 8000602:	f000 fa57 	bl	8000ab4 <MCAL_GPIO_INIT>
	PIN_Config.GPIO_Pin_number=GPIO_PIN_14;
 8000606:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 800060a:	80bb      	strh	r3, [r7, #4]
	PIN_Config.GPIO_output_speed=GPIO_speed_10M;
 800060c:	2301      	movs	r3, #1
 800060e:	71fb      	strb	r3, [r7, #7]
	PIN_Config.GPIO_mode_define=GPIO_MODE_OUTPUT_PP;
 8000610:	2304      	movs	r3, #4
 8000612:	71bb      	strb	r3, [r7, #6]
	MCAL_GPIO_INIT(GPIOB,&PIN_Config);
 8000614:	1d3b      	adds	r3, r7, #4
 8000616:	4619      	mov	r1, r3
 8000618:	4809      	ldr	r0, [pc, #36]	; (8000640 <GPIO_INIT+0xb8>)
 800061a:	f000 fa4b 	bl	8000ab4 <MCAL_GPIO_INIT>
	PIN_Config.GPIO_Pin_number=GPIO_PIN_15;
 800061e:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8000622:	80bb      	strh	r3, [r7, #4]
	PIN_Config.GPIO_output_speed=GPIO_speed_10M;
 8000624:	2301      	movs	r3, #1
 8000626:	71fb      	strb	r3, [r7, #7]
	PIN_Config.GPIO_mode_define=GPIO_MODE_OUTPUT_PP;
 8000628:	2304      	movs	r3, #4
 800062a:	71bb      	strb	r3, [r7, #6]
	MCAL_GPIO_INIT(GPIOB,&PIN_Config);
 800062c:	1d3b      	adds	r3, r7, #4
 800062e:	4619      	mov	r1, r3
 8000630:	4803      	ldr	r0, [pc, #12]	; (8000640 <GPIO_INIT+0xb8>)
 8000632:	f000 fa3f 	bl	8000ab4 <MCAL_GPIO_INIT>
}
 8000636:	bf00      	nop
 8000638:	3708      	adds	r7, #8
 800063a:	46bd      	mov	sp, r7
 800063c:	bd80      	pop	{r7, pc}
 800063e:	bf00      	nop
 8000640:	40010c00 	.word	0x40010c00

08000644 <main>:

int main()
{
 8000644:	b5b0      	push	{r4, r5, r7, lr}
 8000646:	b08a      	sub	sp, #40	; 0x28
 8000648:	af00      	add	r7, sp, #0
	int i;
	char pressed_key;
	clock_init();
 800064a:	f7ff ff89 	bl	8000560 <clock_init>
	LCD_init();
 800064e:	f7ff fe35 	bl	80002bc <LCD_init>
	LCD_WRITE_STRING("ahmed shawky");
 8000652:	482d      	ldr	r0, [pc, #180]	; (8000708 <main+0xc4>)
 8000654:	f7ff ff56 	bl	8000504 <LCD_WRITE_STRING>
	wait(200);
 8000658:	20c8      	movs	r0, #200	; 0xc8
 800065a:	f7ff fd89 	bl	8000170 <wait>
	LCD_Clear_Screen();
 800065e:	f7ff fda3 	bl	80001a8 <LCD_Clear_Screen>
	GPIO_INIT();
 8000662:	f7ff ff91 	bl	8000588 <GPIO_INIT>
	unsigned char seg[]={ZERO,ONE,TWO,THREE,FOUR,FIVE,SIX,SEVEN,EIGHT,NINE};
 8000666:	4a29      	ldr	r2, [pc, #164]	; (800070c <main+0xc8>)
 8000668:	f107 0318 	add.w	r3, r7, #24
 800066c:	ca07      	ldmia	r2, {r0, r1, r2}
 800066e:	c303      	stmia	r3!, {r0, r1}
 8000670:	801a      	strh	r2, [r3, #0]
	unsigned short lcd[]={'0','1','2','3','4','5','6','7','8','9'};
 8000672:	4b27      	ldr	r3, [pc, #156]	; (8000710 <main+0xcc>)
 8000674:	1d3c      	adds	r4, r7, #4
 8000676:	461d      	mov	r5, r3
 8000678:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800067a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800067c:	682b      	ldr	r3, [r5, #0]
 800067e:	6023      	str	r3, [r4, #0]
	for(i=0;i<10;i++)
 8000680:	2300      	movs	r3, #0
 8000682:	627b      	str	r3, [r7, #36]	; 0x24
 8000684:	e01c      	b.n	80006c0 <main+0x7c>
	{
		LCD_WRITE_CHAR(lcd[i]);
 8000686:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8000688:	005b      	lsls	r3, r3, #1
 800068a:	f107 0228 	add.w	r2, r7, #40	; 0x28
 800068e:	4413      	add	r3, r2
 8000690:	f833 3c24 	ldrh.w	r3, [r3, #-36]
 8000694:	b2db      	uxtb	r3, r3
 8000696:	4618      	mov	r0, r3
 8000698:	f7ff fef4 	bl	8000484 <LCD_WRITE_CHAR>
		MCAL_GPIO_write_Port(GPIOB, seg[i]<<9);
 800069c:	f107 0218 	add.w	r2, r7, #24
 80006a0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80006a2:	4413      	add	r3, r2
 80006a4:	781b      	ldrb	r3, [r3, #0]
 80006a6:	b29b      	uxth	r3, r3
 80006a8:	025b      	lsls	r3, r3, #9
 80006aa:	b29b      	uxth	r3, r3
 80006ac:	4619      	mov	r1, r3
 80006ae:	4819      	ldr	r0, [pc, #100]	; (8000714 <main+0xd0>)
 80006b0:	f000 fabf 	bl	8000c32 <MCAL_GPIO_write_Port>
		wait(100);
 80006b4:	2064      	movs	r0, #100	; 0x64
 80006b6:	f7ff fd5b 	bl	8000170 <wait>
	for(i=0;i<10;i++)
 80006ba:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80006bc:	3301      	adds	r3, #1
 80006be:	627b      	str	r3, [r7, #36]	; 0x24
 80006c0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80006c2:	2b09      	cmp	r3, #9
 80006c4:	dddf      	ble.n	8000686 <main+0x42>
	}
	LCD_Clear_Screen();
 80006c6:	f7ff fd6f 	bl	80001a8 <LCD_Clear_Screen>
	LCD_WRITE_STRING("keypad is ready");
 80006ca:	4813      	ldr	r0, [pc, #76]	; (8000718 <main+0xd4>)
 80006cc:	f7ff ff1a 	bl	8000504 <LCD_WRITE_STRING>
	LCD_Clear_Screen();
 80006d0:	f7ff fd6a 	bl	80001a8 <LCD_Clear_Screen>
	keypad_init();
 80006d4:	f000 f84c 	bl	8000770 <keypad_init>
	while(1)
	{
		pressed_key=keyoad_getchar();
 80006d8:	f000 f8c0 	bl	800085c <keyoad_getchar>
 80006dc:	4603      	mov	r3, r0
 80006de:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
		switch(pressed_key)
 80006e2:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 80006e6:	2b21      	cmp	r3, #33	; 0x21
 80006e8:	d002      	beq.n	80006f0 <main+0xac>
 80006ea:	2b4e      	cmp	r3, #78	; 0x4e
 80006ec:	d009      	beq.n	8000702 <main+0xbe>
 80006ee:	e002      	b.n	80006f6 <main+0xb2>
		{
		case ('!'):
						LCD_Clear_Screen();
 80006f0:	f7ff fd5a 	bl	80001a8 <LCD_Clear_Screen>
		break;
 80006f4:	e006      	b.n	8000704 <main+0xc0>
		case ('N'):
						break;
		default:
			LCD_WRITE_CHAR(pressed_key);
 80006f6:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 80006fa:	4618      	mov	r0, r3
 80006fc:	f7ff fec2 	bl	8000484 <LCD_WRITE_CHAR>
			break;
 8000700:	e000      	b.n	8000704 <main+0xc0>
						break;
 8000702:	bf00      	nop
	{
 8000704:	e7e8      	b.n	80006d8 <main+0x94>
 8000706:	bf00      	nop
 8000708:	08000cb0 	.word	0x08000cb0
 800070c:	08000cd0 	.word	0x08000cd0
 8000710:	08000cdc 	.word	0x08000cdc
 8000714:	40010c00 	.word	0x40010c00
 8000718:	08000cc0 	.word	0x08000cc0

0800071c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800071c:	480d      	ldr	r0, [pc, #52]	; (8000754 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800071e:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 8000720:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000724:	480c      	ldr	r0, [pc, #48]	; (8000758 <LoopForever+0x6>)
  ldr r1, =_edata
 8000726:	490d      	ldr	r1, [pc, #52]	; (800075c <LoopForever+0xa>)
  ldr r2, =_sidata
 8000728:	4a0d      	ldr	r2, [pc, #52]	; (8000760 <LoopForever+0xe>)
  movs r3, #0
 800072a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800072c:	e002      	b.n	8000734 <LoopCopyDataInit>

0800072e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800072e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000730:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000732:	3304      	adds	r3, #4

08000734 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000734:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000736:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000738:	d3f9      	bcc.n	800072e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800073a:	4a0a      	ldr	r2, [pc, #40]	; (8000764 <LoopForever+0x12>)
  ldr r4, =_ebss
 800073c:	4c0a      	ldr	r4, [pc, #40]	; (8000768 <LoopForever+0x16>)
  movs r3, #0
 800073e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000740:	e001      	b.n	8000746 <LoopFillZerobss>

08000742 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000742:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000744:	3204      	adds	r2, #4

08000746 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000746:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000748:	d3fb      	bcc.n	8000742 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800074a:	f000 fa81 	bl	8000c50 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800074e:	f7ff ff79 	bl	8000644 <main>

08000752 <LoopForever>:

LoopForever:
    b LoopForever
 8000752:	e7fe      	b.n	8000752 <LoopForever>
  ldr   r0, =_estack
 8000754:	20002800 	.word	0x20002800
  ldr r0, =_sdata
 8000758:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800075c:	20000008 	.word	0x20000008
  ldr r2, =_sidata
 8000760:	08000cf8 	.word	0x08000cf8
  ldr r2, =_sbss
 8000764:	20000008 	.word	0x20000008
  ldr r4, =_ebss
 8000768:	20000028 	.word	0x20000028

0800076c <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800076c:	e7fe      	b.n	800076c <ADC1_2_IRQHandler>
	...

08000770 <keypad_init>:
};
char keypad_c[]={c0,c1,c2,c3};
char keypad_r[]={r0,r1,r2,r3};

void keypad_init()
{
 8000770:	b580      	push	{r7, lr}
 8000772:	af00      	add	r7, sp, #0
	//keypad_dir &=~ (1<<r0) | (1<<r1) | (1<<r2) | (1<<r3);
	PIN_Config.GPIO_Pin_number=r0;
 8000774:	4b37      	ldr	r3, [pc, #220]	; (8000854 <keypad_init+0xe4>)
 8000776:	2201      	movs	r2, #1
 8000778:	801a      	strh	r2, [r3, #0]
	PIN_Config.GPIO_output_speed=GPIO_speed_10M;
 800077a:	4b36      	ldr	r3, [pc, #216]	; (8000854 <keypad_init+0xe4>)
 800077c:	2201      	movs	r2, #1
 800077e:	70da      	strb	r2, [r3, #3]
	PIN_Config.GPIO_mode_define=GPIO_MODE_OUTPUT_PP;
 8000780:	4b34      	ldr	r3, [pc, #208]	; (8000854 <keypad_init+0xe4>)
 8000782:	2204      	movs	r2, #4
 8000784:	709a      	strb	r2, [r3, #2]
	MCAL_GPIO_INIT(keypad_port,&PIN_Config);
 8000786:	4933      	ldr	r1, [pc, #204]	; (8000854 <keypad_init+0xe4>)
 8000788:	4833      	ldr	r0, [pc, #204]	; (8000858 <keypad_init+0xe8>)
 800078a:	f000 f993 	bl	8000ab4 <MCAL_GPIO_INIT>
	PIN_Config.GPIO_Pin_number=r1;
 800078e:	4b31      	ldr	r3, [pc, #196]	; (8000854 <keypad_init+0xe4>)
 8000790:	2202      	movs	r2, #2
 8000792:	801a      	strh	r2, [r3, #0]
	PIN_Config.GPIO_output_speed=GPIO_speed_10M;
 8000794:	4b2f      	ldr	r3, [pc, #188]	; (8000854 <keypad_init+0xe4>)
 8000796:	2201      	movs	r2, #1
 8000798:	70da      	strb	r2, [r3, #3]
	PIN_Config.GPIO_mode_define=GPIO_MODE_OUTPUT_PP;
 800079a:	4b2e      	ldr	r3, [pc, #184]	; (8000854 <keypad_init+0xe4>)
 800079c:	2204      	movs	r2, #4
 800079e:	709a      	strb	r2, [r3, #2]
	MCAL_GPIO_INIT(keypad_port,&PIN_Config);
 80007a0:	492c      	ldr	r1, [pc, #176]	; (8000854 <keypad_init+0xe4>)
 80007a2:	482d      	ldr	r0, [pc, #180]	; (8000858 <keypad_init+0xe8>)
 80007a4:	f000 f986 	bl	8000ab4 <MCAL_GPIO_INIT>
	PIN_Config.GPIO_Pin_number=r2;
 80007a8:	4b2a      	ldr	r3, [pc, #168]	; (8000854 <keypad_init+0xe4>)
 80007aa:	2208      	movs	r2, #8
 80007ac:	801a      	strh	r2, [r3, #0]
	PIN_Config.GPIO_output_speed=GPIO_speed_10M;
 80007ae:	4b29      	ldr	r3, [pc, #164]	; (8000854 <keypad_init+0xe4>)
 80007b0:	2201      	movs	r2, #1
 80007b2:	70da      	strb	r2, [r3, #3]
	PIN_Config.GPIO_mode_define=GPIO_MODE_OUTPUT_PP;
 80007b4:	4b27      	ldr	r3, [pc, #156]	; (8000854 <keypad_init+0xe4>)
 80007b6:	2204      	movs	r2, #4
 80007b8:	709a      	strb	r2, [r3, #2]
	MCAL_GPIO_INIT(keypad_port,&PIN_Config);
 80007ba:	4926      	ldr	r1, [pc, #152]	; (8000854 <keypad_init+0xe4>)
 80007bc:	4826      	ldr	r0, [pc, #152]	; (8000858 <keypad_init+0xe8>)
 80007be:	f000 f979 	bl	8000ab4 <MCAL_GPIO_INIT>
	PIN_Config.GPIO_Pin_number=r3;
 80007c2:	4b24      	ldr	r3, [pc, #144]	; (8000854 <keypad_init+0xe4>)
 80007c4:	2210      	movs	r2, #16
 80007c6:	801a      	strh	r2, [r3, #0]
	PIN_Config.GPIO_output_speed=GPIO_speed_10M;
 80007c8:	4b22      	ldr	r3, [pc, #136]	; (8000854 <keypad_init+0xe4>)
 80007ca:	2201      	movs	r2, #1
 80007cc:	70da      	strb	r2, [r3, #3]
	PIN_Config.GPIO_mode_define=GPIO_MODE_OUTPUT_PP;
 80007ce:	4b21      	ldr	r3, [pc, #132]	; (8000854 <keypad_init+0xe4>)
 80007d0:	2204      	movs	r2, #4
 80007d2:	709a      	strb	r2, [r3, #2]
	MCAL_GPIO_INIT(keypad_port,&PIN_Config);
 80007d4:	491f      	ldr	r1, [pc, #124]	; (8000854 <keypad_init+0xe4>)
 80007d6:	4820      	ldr	r0, [pc, #128]	; (8000858 <keypad_init+0xe8>)
 80007d8:	f000 f96c 	bl	8000ab4 <MCAL_GPIO_INIT>
	PIN_Config.GPIO_Pin_number=c0;
 80007dc:	4b1d      	ldr	r3, [pc, #116]	; (8000854 <keypad_init+0xe4>)
 80007de:	2220      	movs	r2, #32
 80007e0:	801a      	strh	r2, [r3, #0]
	PIN_Config.GPIO_output_speed=GPIO_speed_10M;
 80007e2:	4b1c      	ldr	r3, [pc, #112]	; (8000854 <keypad_init+0xe4>)
 80007e4:	2201      	movs	r2, #1
 80007e6:	70da      	strb	r2, [r3, #3]
	PIN_Config.GPIO_mode_define=GPIO_MODE_OUTPUT_PP;
 80007e8:	4b1a      	ldr	r3, [pc, #104]	; (8000854 <keypad_init+0xe4>)
 80007ea:	2204      	movs	r2, #4
 80007ec:	709a      	strb	r2, [r3, #2]
	MCAL_GPIO_INIT(keypad_port,&PIN_Config);
 80007ee:	4919      	ldr	r1, [pc, #100]	; (8000854 <keypad_init+0xe4>)
 80007f0:	4819      	ldr	r0, [pc, #100]	; (8000858 <keypad_init+0xe8>)
 80007f2:	f000 f95f 	bl	8000ab4 <MCAL_GPIO_INIT>
	PIN_Config.GPIO_Pin_number=c1;
 80007f6:	4b17      	ldr	r3, [pc, #92]	; (8000854 <keypad_init+0xe4>)
 80007f8:	2240      	movs	r2, #64	; 0x40
 80007fa:	801a      	strh	r2, [r3, #0]
	PIN_Config.GPIO_output_speed=GPIO_speed_10M;
 80007fc:	4b15      	ldr	r3, [pc, #84]	; (8000854 <keypad_init+0xe4>)
 80007fe:	2201      	movs	r2, #1
 8000800:	70da      	strb	r2, [r3, #3]
	PIN_Config.GPIO_mode_define=GPIO_MODE_OUTPUT_PP;
 8000802:	4b14      	ldr	r3, [pc, #80]	; (8000854 <keypad_init+0xe4>)
 8000804:	2204      	movs	r2, #4
 8000806:	709a      	strb	r2, [r3, #2]
	MCAL_GPIO_INIT(keypad_port,&PIN_Config);
 8000808:	4912      	ldr	r1, [pc, #72]	; (8000854 <keypad_init+0xe4>)
 800080a:	4813      	ldr	r0, [pc, #76]	; (8000858 <keypad_init+0xe8>)
 800080c:	f000 f952 	bl	8000ab4 <MCAL_GPIO_INIT>
	PIN_Config.GPIO_Pin_number=c2;
 8000810:	4b10      	ldr	r3, [pc, #64]	; (8000854 <keypad_init+0xe4>)
 8000812:	2280      	movs	r2, #128	; 0x80
 8000814:	801a      	strh	r2, [r3, #0]
	PIN_Config.GPIO_output_speed=GPIO_speed_10M;
 8000816:	4b0f      	ldr	r3, [pc, #60]	; (8000854 <keypad_init+0xe4>)
 8000818:	2201      	movs	r2, #1
 800081a:	70da      	strb	r2, [r3, #3]
	PIN_Config.GPIO_mode_define=GPIO_MODE_OUTPUT_PP;
 800081c:	4b0d      	ldr	r3, [pc, #52]	; (8000854 <keypad_init+0xe4>)
 800081e:	2204      	movs	r2, #4
 8000820:	709a      	strb	r2, [r3, #2]
	MCAL_GPIO_INIT(keypad_port,&PIN_Config);
 8000822:	490c      	ldr	r1, [pc, #48]	; (8000854 <keypad_init+0xe4>)
 8000824:	480c      	ldr	r0, [pc, #48]	; (8000858 <keypad_init+0xe8>)
 8000826:	f000 f945 	bl	8000ab4 <MCAL_GPIO_INIT>
	PIN_Config.GPIO_Pin_number=c3;
 800082a:	4b0a      	ldr	r3, [pc, #40]	; (8000854 <keypad_init+0xe4>)
 800082c:	f44f 7280 	mov.w	r2, #256	; 0x100
 8000830:	801a      	strh	r2, [r3, #0]
	PIN_Config.GPIO_output_speed=GPIO_speed_10M;
 8000832:	4b08      	ldr	r3, [pc, #32]	; (8000854 <keypad_init+0xe4>)
 8000834:	2201      	movs	r2, #1
 8000836:	70da      	strb	r2, [r3, #3]
	PIN_Config.GPIO_mode_define=GPIO_MODE_OUTPUT_PP;
 8000838:	4b06      	ldr	r3, [pc, #24]	; (8000854 <keypad_init+0xe4>)
 800083a:	2204      	movs	r2, #4
 800083c:	709a      	strb	r2, [r3, #2]
	MCAL_GPIO_INIT(keypad_port,&PIN_Config);
 800083e:	4905      	ldr	r1, [pc, #20]	; (8000854 <keypad_init+0xe4>)
 8000840:	4805      	ldr	r0, [pc, #20]	; (8000858 <keypad_init+0xe8>)
 8000842:	f000 f937 	bl	8000ab4 <MCAL_GPIO_INIT>
	//keypad_dir |= (1<<c0) | (1 <<c1) | (1<<c2) | (1<<c3);
	//	keypad_port = 0xff;
	MCAL_GPIO_write_Port(keypad_port, 0xff);
 8000846:	21ff      	movs	r1, #255	; 0xff
 8000848:	4803      	ldr	r0, [pc, #12]	; (8000858 <keypad_init+0xe8>)
 800084a:	f000 f9f2 	bl	8000c32 <MCAL_GPIO_write_Port>
}
 800084e:	bf00      	nop
 8000850:	bd80      	pop	{r7, pc}
 8000852:	bf00      	nop
 8000854:	20000024 	.word	0x20000024
 8000858:	40010c00 	.word	0x40010c00

0800085c <keyoad_getchar>:

char keyoad_getchar()
{
 800085c:	b580      	push	{r7, lr}
 800085e:	b082      	sub	sp, #8
 8000860:	af00      	add	r7, sp, #0
	int i , j ;
	for(i=0;i<=3;i++)
 8000862:	2300      	movs	r3, #0
 8000864:	607b      	str	r3, [r7, #4]
 8000866:	e0b4      	b.n	80009d2 <keyoad_getchar+0x176>
	{
		//		keypad_port |= (1<<keypad_c[0]) | (1<<keypad_c[1]) | (1<<keypad_c[2]) | (1<<keypad_c[3]);
		MCAL_GPIO_write_Pin(keypad_port,keypad_c[0], GPIO_Pin_SET);
 8000868:	4b5e      	ldr	r3, [pc, #376]	; (80009e4 <keyoad_getchar+0x188>)
 800086a:	781b      	ldrb	r3, [r3, #0]
 800086c:	b29b      	uxth	r3, r3
 800086e:	2201      	movs	r2, #1
 8000870:	4619      	mov	r1, r3
 8000872:	485d      	ldr	r0, [pc, #372]	; (80009e8 <keyoad_getchar+0x18c>)
 8000874:	f000 f9bf 	bl	8000bf6 <MCAL_GPIO_write_Pin>
		MCAL_GPIO_write_Pin(keypad_port,keypad_c[1], GPIO_Pin_SET);
 8000878:	4b5a      	ldr	r3, [pc, #360]	; (80009e4 <keyoad_getchar+0x188>)
 800087a:	785b      	ldrb	r3, [r3, #1]
 800087c:	b29b      	uxth	r3, r3
 800087e:	2201      	movs	r2, #1
 8000880:	4619      	mov	r1, r3
 8000882:	4859      	ldr	r0, [pc, #356]	; (80009e8 <keyoad_getchar+0x18c>)
 8000884:	f000 f9b7 	bl	8000bf6 <MCAL_GPIO_write_Pin>
		MCAL_GPIO_write_Pin(keypad_port,keypad_c[2], GPIO_Pin_SET);
 8000888:	4b56      	ldr	r3, [pc, #344]	; (80009e4 <keyoad_getchar+0x188>)
 800088a:	789b      	ldrb	r3, [r3, #2]
 800088c:	b29b      	uxth	r3, r3
 800088e:	2201      	movs	r2, #1
 8000890:	4619      	mov	r1, r3
 8000892:	4855      	ldr	r0, [pc, #340]	; (80009e8 <keyoad_getchar+0x18c>)
 8000894:	f000 f9af 	bl	8000bf6 <MCAL_GPIO_write_Pin>
		MCAL_GPIO_write_Pin(keypad_port,keypad_c[3], GPIO_Pin_SET);
 8000898:	4b52      	ldr	r3, [pc, #328]	; (80009e4 <keyoad_getchar+0x188>)
 800089a:	78db      	ldrb	r3, [r3, #3]
 800089c:	b29b      	uxth	r3, r3
 800089e:	2201      	movs	r2, #1
 80008a0:	4619      	mov	r1, r3
 80008a2:	4851      	ldr	r0, [pc, #324]	; (80009e8 <keyoad_getchar+0x18c>)
 80008a4:	f000 f9a7 	bl	8000bf6 <MCAL_GPIO_write_Pin>
		//		keypad_port &=~ (1<<keypad_c[i]);
		MCAL_GPIO_write_Pin(keypad_port,keypad_c[i], GPIO_Pin_RESET);
 80008a8:	4a4e      	ldr	r2, [pc, #312]	; (80009e4 <keyoad_getchar+0x188>)
 80008aa:	687b      	ldr	r3, [r7, #4]
 80008ac:	4413      	add	r3, r2
 80008ae:	781b      	ldrb	r3, [r3, #0]
 80008b0:	b29b      	uxth	r3, r3
 80008b2:	2200      	movs	r2, #0
 80008b4:	4619      	mov	r1, r3
 80008b6:	484c      	ldr	r0, [pc, #304]	; (80009e8 <keyoad_getchar+0x18c>)
 80008b8:	f000 f99d 	bl	8000bf6 <MCAL_GPIO_write_Pin>
		for(j=0;j<=3;j++)
 80008bc:	2300      	movs	r3, #0
 80008be:	603b      	str	r3, [r7, #0]
 80008c0:	e080      	b.n	80009c4 <keyoad_getchar+0x168>
		{
			if(MCAL_GPIO_Read_Pin(keypad_port,keypad_r[j])==0)
 80008c2:	4a4a      	ldr	r2, [pc, #296]	; (80009ec <keyoad_getchar+0x190>)
 80008c4:	683b      	ldr	r3, [r7, #0]
 80008c6:	4413      	add	r3, r2
 80008c8:	781b      	ldrb	r3, [r3, #0]
 80008ca:	b29b      	uxth	r3, r3
 80008cc:	4619      	mov	r1, r3
 80008ce:	4846      	ldr	r0, [pc, #280]	; (80009e8 <keyoad_getchar+0x18c>)
 80008d0:	f000 f975 	bl	8000bbe <MCAL_GPIO_Read_Pin>
 80008d4:	4603      	mov	r3, r0
 80008d6:	2b00      	cmp	r3, #0
 80008d8:	d171      	bne.n	80009be <keyoad_getchar+0x162>
			{
				while(MCAL_GPIO_Read_Pin(keypad_port,keypad_r[j])==0);
 80008da:	bf00      	nop
 80008dc:	4a43      	ldr	r2, [pc, #268]	; (80009ec <keyoad_getchar+0x190>)
 80008de:	683b      	ldr	r3, [r7, #0]
 80008e0:	4413      	add	r3, r2
 80008e2:	781b      	ldrb	r3, [r3, #0]
 80008e4:	b29b      	uxth	r3, r3
 80008e6:	4619      	mov	r1, r3
 80008e8:	483f      	ldr	r0, [pc, #252]	; (80009e8 <keyoad_getchar+0x18c>)
 80008ea:	f000 f968 	bl	8000bbe <MCAL_GPIO_Read_Pin>
 80008ee:	4603      	mov	r3, r0
 80008f0:	2b00      	cmp	r3, #0
 80008f2:	d0f3      	beq.n	80008dc <keyoad_getchar+0x80>
				switch(i)
 80008f4:	687b      	ldr	r3, [r7, #4]
 80008f6:	2b03      	cmp	r3, #3
 80008f8:	d861      	bhi.n	80009be <keyoad_getchar+0x162>
 80008fa:	a201      	add	r2, pc, #4	; (adr r2, 8000900 <keyoad_getchar+0xa4>)
 80008fc:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000900:	08000911 	.word	0x08000911
 8000904:	08000939 	.word	0x08000939
 8000908:	08000961 	.word	0x08000961
 800090c:	08000989 	.word	0x08000989
				{
				case(0):
													if(j==0) return '7';
 8000910:	683b      	ldr	r3, [r7, #0]
 8000912:	2b00      	cmp	r3, #0
 8000914:	d101      	bne.n	800091a <keyoad_getchar+0xbe>
 8000916:	2337      	movs	r3, #55	; 0x37
 8000918:	e060      	b.n	80009dc <keyoad_getchar+0x180>
													else if(j==1) return '4';
 800091a:	683b      	ldr	r3, [r7, #0]
 800091c:	2b01      	cmp	r3, #1
 800091e:	d101      	bne.n	8000924 <keyoad_getchar+0xc8>
 8000920:	2334      	movs	r3, #52	; 0x34
 8000922:	e05b      	b.n	80009dc <keyoad_getchar+0x180>
													else if(j==2) return '1';
 8000924:	683b      	ldr	r3, [r7, #0]
 8000926:	2b02      	cmp	r3, #2
 8000928:	d101      	bne.n	800092e <keyoad_getchar+0xd2>
 800092a:	2331      	movs	r3, #49	; 0x31
 800092c:	e056      	b.n	80009dc <keyoad_getchar+0x180>
													else if(j==3) return '!';
 800092e:	683b      	ldr	r3, [r7, #0]
 8000930:	2b03      	cmp	r3, #3
 8000932:	d13d      	bne.n	80009b0 <keyoad_getchar+0x154>
 8000934:	2321      	movs	r3, #33	; 0x21
 8000936:	e051      	b.n	80009dc <keyoad_getchar+0x180>
				break;
				case(1):
													if(j==0) return '8';
 8000938:	683b      	ldr	r3, [r7, #0]
 800093a:	2b00      	cmp	r3, #0
 800093c:	d101      	bne.n	8000942 <keyoad_getchar+0xe6>
 800093e:	2338      	movs	r3, #56	; 0x38
 8000940:	e04c      	b.n	80009dc <keyoad_getchar+0x180>
													else if(j==1) return '5';
 8000942:	683b      	ldr	r3, [r7, #0]
 8000944:	2b01      	cmp	r3, #1
 8000946:	d101      	bne.n	800094c <keyoad_getchar+0xf0>
 8000948:	2335      	movs	r3, #53	; 0x35
 800094a:	e047      	b.n	80009dc <keyoad_getchar+0x180>
													else if(j==2) return '2';
 800094c:	683b      	ldr	r3, [r7, #0]
 800094e:	2b02      	cmp	r3, #2
 8000950:	d101      	bne.n	8000956 <keyoad_getchar+0xfa>
 8000952:	2332      	movs	r3, #50	; 0x32
 8000954:	e042      	b.n	80009dc <keyoad_getchar+0x180>
													else if(j==3) return '0';
 8000956:	683b      	ldr	r3, [r7, #0]
 8000958:	2b03      	cmp	r3, #3
 800095a:	d12b      	bne.n	80009b4 <keyoad_getchar+0x158>
 800095c:	2330      	movs	r3, #48	; 0x30
 800095e:	e03d      	b.n	80009dc <keyoad_getchar+0x180>
				break;
				case(2):
													if(j==0) return '9';
 8000960:	683b      	ldr	r3, [r7, #0]
 8000962:	2b00      	cmp	r3, #0
 8000964:	d101      	bne.n	800096a <keyoad_getchar+0x10e>
 8000966:	2339      	movs	r3, #57	; 0x39
 8000968:	e038      	b.n	80009dc <keyoad_getchar+0x180>
													else if(j==1) return '6';
 800096a:	683b      	ldr	r3, [r7, #0]
 800096c:	2b01      	cmp	r3, #1
 800096e:	d101      	bne.n	8000974 <keyoad_getchar+0x118>
 8000970:	2336      	movs	r3, #54	; 0x36
 8000972:	e033      	b.n	80009dc <keyoad_getchar+0x180>
													else if(j==2) return '3';
 8000974:	683b      	ldr	r3, [r7, #0]
 8000976:	2b02      	cmp	r3, #2
 8000978:	d101      	bne.n	800097e <keyoad_getchar+0x122>
 800097a:	2333      	movs	r3, #51	; 0x33
 800097c:	e02e      	b.n	80009dc <keyoad_getchar+0x180>
													else if(j==3) return '0';
 800097e:	683b      	ldr	r3, [r7, #0]
 8000980:	2b03      	cmp	r3, #3
 8000982:	d119      	bne.n	80009b8 <keyoad_getchar+0x15c>
 8000984:	2330      	movs	r3, #48	; 0x30
 8000986:	e029      	b.n	80009dc <keyoad_getchar+0x180>
				break;
				case(3):
													if(j==0) return '/';
 8000988:	683b      	ldr	r3, [r7, #0]
 800098a:	2b00      	cmp	r3, #0
 800098c:	d101      	bne.n	8000992 <keyoad_getchar+0x136>
 800098e:	232f      	movs	r3, #47	; 0x2f
 8000990:	e024      	b.n	80009dc <keyoad_getchar+0x180>
													else if(j==1) return '*';
 8000992:	683b      	ldr	r3, [r7, #0]
 8000994:	2b01      	cmp	r3, #1
 8000996:	d101      	bne.n	800099c <keyoad_getchar+0x140>
 8000998:	232a      	movs	r3, #42	; 0x2a
 800099a:	e01f      	b.n	80009dc <keyoad_getchar+0x180>
													else if(j==2) return '-';
 800099c:	683b      	ldr	r3, [r7, #0]
 800099e:	2b02      	cmp	r3, #2
 80009a0:	d101      	bne.n	80009a6 <keyoad_getchar+0x14a>
 80009a2:	232d      	movs	r3, #45	; 0x2d
 80009a4:	e01a      	b.n	80009dc <keyoad_getchar+0x180>
													else if(j==3) return '+';
 80009a6:	683b      	ldr	r3, [r7, #0]
 80009a8:	2b03      	cmp	r3, #3
 80009aa:	d107      	bne.n	80009bc <keyoad_getchar+0x160>
 80009ac:	232b      	movs	r3, #43	; 0x2b
 80009ae:	e015      	b.n	80009dc <keyoad_getchar+0x180>
				break;
 80009b0:	bf00      	nop
 80009b2:	e004      	b.n	80009be <keyoad_getchar+0x162>
				break;
 80009b4:	bf00      	nop
 80009b6:	e002      	b.n	80009be <keyoad_getchar+0x162>
				break;
 80009b8:	bf00      	nop
 80009ba:	e000      	b.n	80009be <keyoad_getchar+0x162>
				break;
 80009bc:	bf00      	nop
		for(j=0;j<=3;j++)
 80009be:	683b      	ldr	r3, [r7, #0]
 80009c0:	3301      	adds	r3, #1
 80009c2:	603b      	str	r3, [r7, #0]
 80009c4:	683b      	ldr	r3, [r7, #0]
 80009c6:	2b03      	cmp	r3, #3
 80009c8:	f77f af7b 	ble.w	80008c2 <keyoad_getchar+0x66>
	for(i=0;i<=3;i++)
 80009cc:	687b      	ldr	r3, [r7, #4]
 80009ce:	3301      	adds	r3, #1
 80009d0:	607b      	str	r3, [r7, #4]
 80009d2:	687b      	ldr	r3, [r7, #4]
 80009d4:	2b03      	cmp	r3, #3
 80009d6:	f77f af47 	ble.w	8000868 <keyoad_getchar+0xc>
				}
			}
		}
	}
	return 'N';
 80009da:	234e      	movs	r3, #78	; 0x4e

}
 80009dc:	4618      	mov	r0, r3
 80009de:	3708      	adds	r7, #8
 80009e0:	46bd      	mov	sp, r7
 80009e2:	bd80      	pop	{r7, pc}
 80009e4:	20000000 	.word	0x20000000
 80009e8:	40010c00 	.word	0x40010c00
 80009ec:	20000004 	.word	0x20000004

080009f0 <Get_CRLH_Position>:
 *  Created on: Aug 2, 2022
 *      Author: ahmed shawki
 */
#include "stm32f103c6_gpio_driver.h"
uint8_t Get_CRLH_Position(uint16_t pin_number)
{
 80009f0:	b480      	push	{r7}
 80009f2:	b083      	sub	sp, #12
 80009f4:	af00      	add	r7, sp, #0
 80009f6:	4603      	mov	r3, r0
 80009f8:	80fb      	strh	r3, [r7, #6]
switch(pin_number)
 80009fa:	88fb      	ldrh	r3, [r7, #6]
 80009fc:	2b80      	cmp	r3, #128	; 0x80
 80009fe:	d042      	beq.n	8000a86 <Get_CRLH_Position+0x96>
 8000a00:	2b80      	cmp	r3, #128	; 0x80
 8000a02:	dc11      	bgt.n	8000a28 <Get_CRLH_Position+0x38>
 8000a04:	2b08      	cmp	r3, #8
 8000a06:	d036      	beq.n	8000a76 <Get_CRLH_Position+0x86>
 8000a08:	2b08      	cmp	r3, #8
 8000a0a:	dc06      	bgt.n	8000a1a <Get_CRLH_Position+0x2a>
 8000a0c:	2b02      	cmp	r3, #2
 8000a0e:	d02e      	beq.n	8000a6e <Get_CRLH_Position+0x7e>
 8000a10:	2b04      	cmp	r3, #4
 8000a12:	d02e      	beq.n	8000a72 <Get_CRLH_Position+0x82>
 8000a14:	2b01      	cmp	r3, #1
 8000a16:	d028      	beq.n	8000a6a <Get_CRLH_Position+0x7a>
 8000a18:	e047      	b.n	8000aaa <Get_CRLH_Position+0xba>
 8000a1a:	2b20      	cmp	r3, #32
 8000a1c:	d02f      	beq.n	8000a7e <Get_CRLH_Position+0x8e>
 8000a1e:	2b40      	cmp	r3, #64	; 0x40
 8000a20:	d02f      	beq.n	8000a82 <Get_CRLH_Position+0x92>
 8000a22:	2b10      	cmp	r3, #16
 8000a24:	d029      	beq.n	8000a7a <Get_CRLH_Position+0x8a>
 8000a26:	e040      	b.n	8000aaa <Get_CRLH_Position+0xba>
 8000a28:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8000a2c:	d033      	beq.n	8000a96 <Get_CRLH_Position+0xa6>
 8000a2e:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8000a32:	dc09      	bgt.n	8000a48 <Get_CRLH_Position+0x58>
 8000a34:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8000a38:	d029      	beq.n	8000a8e <Get_CRLH_Position+0x9e>
 8000a3a:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8000a3e:	d028      	beq.n	8000a92 <Get_CRLH_Position+0xa2>
 8000a40:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8000a44:	d021      	beq.n	8000a8a <Get_CRLH_Position+0x9a>
 8000a46:	e030      	b.n	8000aaa <Get_CRLH_Position+0xba>
 8000a48:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8000a4c:	d027      	beq.n	8000a9e <Get_CRLH_Position+0xae>
 8000a4e:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8000a52:	dc03      	bgt.n	8000a5c <Get_CRLH_Position+0x6c>
 8000a54:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8000a58:	d01f      	beq.n	8000a9a <Get_CRLH_Position+0xaa>
 8000a5a:	e026      	b.n	8000aaa <Get_CRLH_Position+0xba>
 8000a5c:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8000a60:	d01f      	beq.n	8000aa2 <Get_CRLH_Position+0xb2>
 8000a62:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8000a66:	d01e      	beq.n	8000aa6 <Get_CRLH_Position+0xb6>
 8000a68:	e01f      	b.n	8000aaa <Get_CRLH_Position+0xba>
{
case GPIO_PIN_0:
	return 0 ;
 8000a6a:	2300      	movs	r3, #0
 8000a6c:	e01d      	b.n	8000aaa <Get_CRLH_Position+0xba>
	break;
case GPIO_PIN_1:
	return 4 ;
 8000a6e:	2304      	movs	r3, #4
 8000a70:	e01b      	b.n	8000aaa <Get_CRLH_Position+0xba>
	break;
case GPIO_PIN_2:
	return 8 ;
 8000a72:	2308      	movs	r3, #8
 8000a74:	e019      	b.n	8000aaa <Get_CRLH_Position+0xba>
	break;
case GPIO_PIN_3:
	return 12 ;
 8000a76:	230c      	movs	r3, #12
 8000a78:	e017      	b.n	8000aaa <Get_CRLH_Position+0xba>
	break;
case GPIO_PIN_4:
	return 16 ;
 8000a7a:	2310      	movs	r3, #16
 8000a7c:	e015      	b.n	8000aaa <Get_CRLH_Position+0xba>
	break;
case GPIO_PIN_5:
	return 20 ;
 8000a7e:	2314      	movs	r3, #20
 8000a80:	e013      	b.n	8000aaa <Get_CRLH_Position+0xba>
	break;
case GPIO_PIN_6:
	return 24 ;
 8000a82:	2318      	movs	r3, #24
 8000a84:	e011      	b.n	8000aaa <Get_CRLH_Position+0xba>
	break;
case GPIO_PIN_7:
	return 28 ;
 8000a86:	231c      	movs	r3, #28
 8000a88:	e00f      	b.n	8000aaa <Get_CRLH_Position+0xba>
	break;
case GPIO_PIN_8:
	return 0 ;
 8000a8a:	2300      	movs	r3, #0
 8000a8c:	e00d      	b.n	8000aaa <Get_CRLH_Position+0xba>
	break;
case GPIO_PIN_9:
	return 4 ;
 8000a8e:	2304      	movs	r3, #4
 8000a90:	e00b      	b.n	8000aaa <Get_CRLH_Position+0xba>
	break;
case GPIO_PIN_10:
	return 8 ;
 8000a92:	2308      	movs	r3, #8
 8000a94:	e009      	b.n	8000aaa <Get_CRLH_Position+0xba>
	break;
case GPIO_PIN_11:
	return 12 ;
 8000a96:	230c      	movs	r3, #12
 8000a98:	e007      	b.n	8000aaa <Get_CRLH_Position+0xba>
	break;
case GPIO_PIN_12:
	return 16 ;
 8000a9a:	2310      	movs	r3, #16
 8000a9c:	e005      	b.n	8000aaa <Get_CRLH_Position+0xba>
	break;
case GPIO_PIN_13:
	return 20 ;
 8000a9e:	2314      	movs	r3, #20
 8000aa0:	e003      	b.n	8000aaa <Get_CRLH_Position+0xba>
	break;
case GPIO_PIN_14:
	return 24 ;
 8000aa2:	2318      	movs	r3, #24
 8000aa4:	e001      	b.n	8000aaa <Get_CRLH_Position+0xba>
	break;
case GPIO_PIN_15:
	return 28 ;
 8000aa6:	231c      	movs	r3, #28
 8000aa8:	e7ff      	b.n	8000aaa <Get_CRLH_Position+0xba>
	break;

}
}
 8000aaa:	4618      	mov	r0, r3
 8000aac:	370c      	adds	r7, #12
 8000aae:	46bd      	mov	sp, r7
 8000ab0:	bc80      	pop	{r7}
 8000ab2:	4770      	bx	lr

08000ab4 <MCAL_GPIO_INIT>:
* @retval 		- none
* Note			- the stm32f103c6 has ports A,B,C,D,E
* 				  but if you use LFQP48 package it uses only A,B and part of C,D
*/
void  MCAL_GPIO_INIT(GPIO_typedef *GPIOX,GPIO_Pin_config_t* pin_config)
{
 8000ab4:	b590      	push	{r4, r7, lr}
 8000ab6:	b085      	sub	sp, #20
 8000ab8:	af00      	add	r7, sp, #0
 8000aba:	6078      	str	r0, [r7, #4]
 8000abc:	6039      	str	r1, [r7, #0]
	volatile uint32_t *config_register=NULL;
 8000abe:	2300      	movs	r3, #0
 8000ac0:	60fb      	str	r3, [r7, #12]
	volatile uint8_t PIN_CONFIG=0;
 8000ac2:	2300      	movs	r3, #0
 8000ac4:	72fb      	strb	r3, [r7, #11]
	//determine the register CRL or CRH
	config_register =pin_config->GPIO_Pin_number <GPIO_PIN_8 ? &GPIOX->CRL:&GPIOX->CRH;
 8000ac6:	683b      	ldr	r3, [r7, #0]
 8000ac8:	881b      	ldrh	r3, [r3, #0]
 8000aca:	2bff      	cmp	r3, #255	; 0xff
 8000acc:	d801      	bhi.n	8000ad2 <MCAL_GPIO_INIT+0x1e>
 8000ace:	687b      	ldr	r3, [r7, #4]
 8000ad0:	e001      	b.n	8000ad6 <MCAL_GPIO_INIT+0x22>
 8000ad2:	687b      	ldr	r3, [r7, #4]
 8000ad4:	3304      	adds	r3, #4
 8000ad6:	60fb      	str	r3, [r7, #12]
	//clear the CNFy MODEy at the beginning
	*(config_register)&=~(0xf<<Get_CRLH_Position(pin_config->GPIO_Pin_number));
 8000ad8:	683b      	ldr	r3, [r7, #0]
 8000ada:	881b      	ldrh	r3, [r3, #0]
 8000adc:	4618      	mov	r0, r3
 8000ade:	f7ff ff87 	bl	80009f0 <Get_CRLH_Position>
 8000ae2:	4603      	mov	r3, r0
 8000ae4:	461a      	mov	r2, r3
 8000ae6:	230f      	movs	r3, #15
 8000ae8:	4093      	lsls	r3, r2
 8000aea:	43da      	mvns	r2, r3
 8000aec:	68fb      	ldr	r3, [r7, #12]
 8000aee:	681b      	ldr	r3, [r3, #0]
 8000af0:	401a      	ands	r2, r3
 8000af2:	68fb      	ldr	r3, [r7, #12]
 8000af4:	601a      	str	r2, [r3, #0]
	//if pin is output
	if((pin_config->GPIO_mode_define==GPIO_MODE_OUTPUT_PP)||(pin_config->GPIO_mode_define==GPIO_MODE_OUTPUT_OD)||(pin_config->GPIO_mode_define==GPIO_MODE_ALTF_OUTPUT_OD)||(pin_config->GPIO_mode_define==GPIO_MODE_ALTF_OUTPUT_PP))
 8000af6:	683b      	ldr	r3, [r7, #0]
 8000af8:	789b      	ldrb	r3, [r3, #2]
 8000afa:	2b04      	cmp	r3, #4
 8000afc:	d00b      	beq.n	8000b16 <MCAL_GPIO_INIT+0x62>
 8000afe:	683b      	ldr	r3, [r7, #0]
 8000b00:	789b      	ldrb	r3, [r3, #2]
 8000b02:	2b05      	cmp	r3, #5
 8000b04:	d007      	beq.n	8000b16 <MCAL_GPIO_INIT+0x62>
 8000b06:	683b      	ldr	r3, [r7, #0]
 8000b08:	789b      	ldrb	r3, [r3, #2]
 8000b0a:	2b07      	cmp	r3, #7
 8000b0c:	d003      	beq.n	8000b16 <MCAL_GPIO_INIT+0x62>
 8000b0e:	683b      	ldr	r3, [r7, #0]
 8000b10:	789b      	ldrb	r3, [r3, #2]
 8000b12:	2b06      	cmp	r3, #6
 8000b14:	d10f      	bne.n	8000b36 <MCAL_GPIO_INIT+0x82>
	{
		PIN_CONFIG=((((pin_config->GPIO_mode_define-4)<<2)|(pin_config->GPIO_output_speed))&0x0f);
 8000b16:	683b      	ldr	r3, [r7, #0]
 8000b18:	789b      	ldrb	r3, [r3, #2]
 8000b1a:	3b04      	subs	r3, #4
 8000b1c:	009b      	lsls	r3, r3, #2
 8000b1e:	b25a      	sxtb	r2, r3
 8000b20:	683b      	ldr	r3, [r7, #0]
 8000b22:	78db      	ldrb	r3, [r3, #3]
 8000b24:	b25b      	sxtb	r3, r3
 8000b26:	4313      	orrs	r3, r2
 8000b28:	b25b      	sxtb	r3, r3
 8000b2a:	b2db      	uxtb	r3, r3
 8000b2c:	f003 030f 	and.w	r3, r3, #15
 8000b30:	b2db      	uxtb	r3, r3
 8000b32:	72fb      	strb	r3, [r7, #11]
 8000b34:	e02f      	b.n	8000b96 <MCAL_GPIO_INIT+0xe2>
	}
	//if pin is input
	else
	{
		if((pin_config->GPIO_mode_define==GPIO_MODE_INPUT_FLO)||(pin_config->GPIO_mode_define==GPIO_MODE_Analog))
 8000b36:	683b      	ldr	r3, [r7, #0]
 8000b38:	789b      	ldrb	r3, [r3, #2]
 8000b3a:	2b01      	cmp	r3, #1
 8000b3c:	d003      	beq.n	8000b46 <MCAL_GPIO_INIT+0x92>
 8000b3e:	683b      	ldr	r3, [r7, #0]
 8000b40:	789b      	ldrb	r3, [r3, #2]
 8000b42:	2b00      	cmp	r3, #0
 8000b44:	d108      	bne.n	8000b58 <MCAL_GPIO_INIT+0xa4>
				{
			PIN_CONFIG=((((pin_config->GPIO_mode_define)<<2)|0x0)&0x0f);
 8000b46:	683b      	ldr	r3, [r7, #0]
 8000b48:	789b      	ldrb	r3, [r3, #2]
 8000b4a:	009b      	lsls	r3, r3, #2
 8000b4c:	b2db      	uxtb	r3, r3
 8000b4e:	f003 030f 	and.w	r3, r3, #15
 8000b52:	b2db      	uxtb	r3, r3
 8000b54:	72fb      	strb	r3, [r7, #11]
 8000b56:	e01e      	b.n	8000b96 <MCAL_GPIO_INIT+0xe2>
				}
		else if(pin_config->GPIO_mode_define==GPIO_MODE_AF_input)
 8000b58:	683b      	ldr	r3, [r7, #0]
 8000b5a:	789b      	ldrb	r3, [r3, #2]
 8000b5c:	2b08      	cmp	r3, #8
 8000b5e:	d102      	bne.n	8000b66 <MCAL_GPIO_INIT+0xb2>
					{
				PIN_CONFIG=((((GPIO_MODE_INPUT_FLO)<<2)|0x0)&0xf);
 8000b60:	2304      	movs	r3, #4
 8000b62:	72fb      	strb	r3, [r7, #11]
 8000b64:	e017      	b.n	8000b96 <MCAL_GPIO_INIT+0xe2>
					}
		else// PU or PD
		{
		if(pin_config->GPIO_mode_define==GPIO_MODE_INPUT_PU)
 8000b66:	683b      	ldr	r3, [r7, #0]
 8000b68:	789b      	ldrb	r3, [r3, #2]
 8000b6a:	2b02      	cmp	r3, #2
 8000b6c:	d109      	bne.n	8000b82 <MCAL_GPIO_INIT+0xce>
		{
			PIN_CONFIG=((((GPIO_MODE_INPUT_PU)<<2)|0x0)&0xf);
 8000b6e:	2308      	movs	r3, #8
 8000b70:	72fb      	strb	r3, [r7, #11]
			GPIOX->ODR|=pin_config->GPIO_Pin_number;
 8000b72:	687b      	ldr	r3, [r7, #4]
 8000b74:	68db      	ldr	r3, [r3, #12]
 8000b76:	683a      	ldr	r2, [r7, #0]
 8000b78:	8812      	ldrh	r2, [r2, #0]
 8000b7a:	431a      	orrs	r2, r3
 8000b7c:	687b      	ldr	r3, [r7, #4]
 8000b7e:	60da      	str	r2, [r3, #12]
 8000b80:	e009      	b.n	8000b96 <MCAL_GPIO_INIT+0xe2>
		}
		else
		{
			PIN_CONFIG=((((GPIO_MODE_INPUT_PU)<<2)|0x0)&0xf);
 8000b82:	2308      	movs	r3, #8
 8000b84:	72fb      	strb	r3, [r7, #11]
			GPIOX->ODR&=~(pin_config->GPIO_Pin_number);
 8000b86:	687b      	ldr	r3, [r7, #4]
 8000b88:	68db      	ldr	r3, [r3, #12]
 8000b8a:	683a      	ldr	r2, [r7, #0]
 8000b8c:	8812      	ldrh	r2, [r2, #0]
 8000b8e:	43d2      	mvns	r2, r2
 8000b90:	401a      	ands	r2, r3
 8000b92:	687b      	ldr	r3, [r7, #4]
 8000b94:	60da      	str	r2, [r3, #12]
		}
		}
	}
	//write on CRL or CRH
	(*config_register)|=((PIN_CONFIG)<<Get_CRLH_Position(pin_config->GPIO_Pin_number));
 8000b96:	7afb      	ldrb	r3, [r7, #11]
 8000b98:	b2db      	uxtb	r3, r3
 8000b9a:	461c      	mov	r4, r3
 8000b9c:	683b      	ldr	r3, [r7, #0]
 8000b9e:	881b      	ldrh	r3, [r3, #0]
 8000ba0:	4618      	mov	r0, r3
 8000ba2:	f7ff ff25 	bl	80009f0 <Get_CRLH_Position>
 8000ba6:	4603      	mov	r3, r0
 8000ba8:	fa04 f203 	lsl.w	r2, r4, r3
 8000bac:	68fb      	ldr	r3, [r7, #12]
 8000bae:	681b      	ldr	r3, [r3, #0]
 8000bb0:	431a      	orrs	r2, r3
 8000bb2:	68fb      	ldr	r3, [r7, #12]
 8000bb4:	601a      	str	r2, [r3, #0]
}
 8000bb6:	bf00      	nop
 8000bb8:	3714      	adds	r7, #20
 8000bba:	46bd      	mov	sp, r7
 8000bbc:	bd90      	pop	{r4, r7, pc}

08000bbe <MCAL_GPIO_Read_Pin>:
* @retval 		- the input pin value (two values based on @ref GPIO_PIN_STATE )
* Note			- none
*/

uint8_t MCAL_GPIO_Read_Pin(GPIO_typedef *GPIOX,uint16_t pin_number)
{
 8000bbe:	b480      	push	{r7}
 8000bc0:	b085      	sub	sp, #20
 8000bc2:	af00      	add	r7, sp, #0
 8000bc4:	6078      	str	r0, [r7, #4]
 8000bc6:	460b      	mov	r3, r1
 8000bc8:	807b      	strh	r3, [r7, #2]
	uint8_t status_bit;
	if((GPIOX->IDR)&(pin_number)!=(uint32_t)GPIO_Pin_RESET)
 8000bca:	687b      	ldr	r3, [r7, #4]
 8000bcc:	689b      	ldr	r3, [r3, #8]
 8000bce:	887a      	ldrh	r2, [r7, #2]
 8000bd0:	2a00      	cmp	r2, #0
 8000bd2:	bf14      	ite	ne
 8000bd4:	2201      	movne	r2, #1
 8000bd6:	2200      	moveq	r2, #0
 8000bd8:	b2d2      	uxtb	r2, r2
 8000bda:	4013      	ands	r3, r2
 8000bdc:	2b00      	cmp	r3, #0
 8000bde:	d002      	beq.n	8000be6 <MCAL_GPIO_Read_Pin+0x28>
	{
		status_bit=GPIO_Pin_SET;
 8000be0:	2301      	movs	r3, #1
 8000be2:	73fb      	strb	r3, [r7, #15]
 8000be4:	e001      	b.n	8000bea <MCAL_GPIO_Read_Pin+0x2c>
	}
	else
	{
		status_bit=GPIO_Pin_RESET;
 8000be6:	2300      	movs	r3, #0
 8000be8:	73fb      	strb	r3, [r7, #15]
	}
	return status_bit;
 8000bea:	7bfb      	ldrb	r3, [r7, #15]
}
 8000bec:	4618      	mov	r0, r3
 8000bee:	3714      	adds	r7, #20
 8000bf0:	46bd      	mov	sp, r7
 8000bf2:	bc80      	pop	{r7}
 8000bf4:	4770      	bx	lr

08000bf6 <MCAL_GPIO_write_Pin>:
* * @param [in] - value : pin value
* @retval 		- none
* Note			- none
*/
void  MCAL_GPIO_write_Pin(GPIO_typedef *GPIOX,uint16_t pin_number,uint8_t value)
{
 8000bf6:	b480      	push	{r7}
 8000bf8:	b083      	sub	sp, #12
 8000bfa:	af00      	add	r7, sp, #0
 8000bfc:	6078      	str	r0, [r7, #4]
 8000bfe:	460b      	mov	r3, r1
 8000c00:	807b      	strh	r3, [r7, #2]
 8000c02:	4613      	mov	r3, r2
 8000c04:	707b      	strb	r3, [r7, #1]
	if(value!=(uint8_t)GPIO_Pin_RESET)
 8000c06:	787b      	ldrb	r3, [r7, #1]
 8000c08:	2b00      	cmp	r3, #0
 8000c0a:	d006      	beq.n	8000c1a <MCAL_GPIO_write_Pin+0x24>
	{
		GPIOX->ODR|=pin_number;
 8000c0c:	687b      	ldr	r3, [r7, #4]
 8000c0e:	68da      	ldr	r2, [r3, #12]
 8000c10:	887b      	ldrh	r3, [r7, #2]
 8000c12:	431a      	orrs	r2, r3
 8000c14:	687b      	ldr	r3, [r7, #4]
 8000c16:	60da      	str	r2, [r3, #12]
	}
	else
	{
		GPIOX->ODR&=~(pin_number);
	}
}
 8000c18:	e006      	b.n	8000c28 <MCAL_GPIO_write_Pin+0x32>
		GPIOX->ODR&=~(pin_number);
 8000c1a:	687b      	ldr	r3, [r7, #4]
 8000c1c:	68db      	ldr	r3, [r3, #12]
 8000c1e:	887a      	ldrh	r2, [r7, #2]
 8000c20:	43d2      	mvns	r2, r2
 8000c22:	401a      	ands	r2, r3
 8000c24:	687b      	ldr	r3, [r7, #4]
 8000c26:	60da      	str	r2, [r3, #12]
}
 8000c28:	bf00      	nop
 8000c2a:	370c      	adds	r7, #12
 8000c2c:	46bd      	mov	sp, r7
 8000c2e:	bc80      	pop	{r7}
 8000c30:	4770      	bx	lr

08000c32 <MCAL_GPIO_write_Port>:
* @param [in] 	- value : port value
* @retval 		- none
* Note			- none
*/
void  MCAL_GPIO_write_Port(GPIO_typedef *GPIOX,uint16_t value)
{
 8000c32:	b480      	push	{r7}
 8000c34:	b083      	sub	sp, #12
 8000c36:	af00      	add	r7, sp, #0
 8000c38:	6078      	str	r0, [r7, #4]
 8000c3a:	460b      	mov	r3, r1
 8000c3c:	807b      	strh	r3, [r7, #2]
	GPIOX->ODR=(uint32_t)value;
 8000c3e:	887a      	ldrh	r2, [r7, #2]
 8000c40:	687b      	ldr	r3, [r7, #4]
 8000c42:	60da      	str	r2, [r3, #12]
}
 8000c44:	bf00      	nop
 8000c46:	370c      	adds	r7, #12
 8000c48:	46bd      	mov	sp, r7
 8000c4a:	bc80      	pop	{r7}
 8000c4c:	4770      	bx	lr
	...

08000c50 <__libc_init_array>:
 8000c50:	b570      	push	{r4, r5, r6, lr}
 8000c52:	2500      	movs	r5, #0
 8000c54:	4e0c      	ldr	r6, [pc, #48]	; (8000c88 <__libc_init_array+0x38>)
 8000c56:	4c0d      	ldr	r4, [pc, #52]	; (8000c8c <__libc_init_array+0x3c>)
 8000c58:	1ba4      	subs	r4, r4, r6
 8000c5a:	10a4      	asrs	r4, r4, #2
 8000c5c:	42a5      	cmp	r5, r4
 8000c5e:	d109      	bne.n	8000c74 <__libc_init_array+0x24>
 8000c60:	f000 f81a 	bl	8000c98 <_init>
 8000c64:	2500      	movs	r5, #0
 8000c66:	4e0a      	ldr	r6, [pc, #40]	; (8000c90 <__libc_init_array+0x40>)
 8000c68:	4c0a      	ldr	r4, [pc, #40]	; (8000c94 <__libc_init_array+0x44>)
 8000c6a:	1ba4      	subs	r4, r4, r6
 8000c6c:	10a4      	asrs	r4, r4, #2
 8000c6e:	42a5      	cmp	r5, r4
 8000c70:	d105      	bne.n	8000c7e <__libc_init_array+0x2e>
 8000c72:	bd70      	pop	{r4, r5, r6, pc}
 8000c74:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000c78:	4798      	blx	r3
 8000c7a:	3501      	adds	r5, #1
 8000c7c:	e7ee      	b.n	8000c5c <__libc_init_array+0xc>
 8000c7e:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000c82:	4798      	blx	r3
 8000c84:	3501      	adds	r5, #1
 8000c86:	e7f2      	b.n	8000c6e <__libc_init_array+0x1e>
 8000c88:	08000cf0 	.word	0x08000cf0
 8000c8c:	08000cf0 	.word	0x08000cf0
 8000c90:	08000cf0 	.word	0x08000cf0
 8000c94:	08000cf4 	.word	0x08000cf4

08000c98 <_init>:
 8000c98:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000c9a:	bf00      	nop
 8000c9c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000c9e:	bc08      	pop	{r3}
 8000ca0:	469e      	mov	lr, r3
 8000ca2:	4770      	bx	lr

08000ca4 <_fini>:
 8000ca4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000ca6:	bf00      	nop
 8000ca8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000caa:	bc08      	pop	{r3}
 8000cac:	469e      	mov	lr, r3
 8000cae:	4770      	bx	lr
